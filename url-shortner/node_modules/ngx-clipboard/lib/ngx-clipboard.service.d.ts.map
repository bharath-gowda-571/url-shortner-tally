{"version":3,"file":"ngx-clipboard.service.d.ts","sources":["ngx-clipboard.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ClipboardParams, IClipboardResponse } from './interface';\n/**\n * The following code is heavily copied from https://github.com/zenorocha/clipboard.js\n */\nexport declare class ClipboardService {\n    private ngZone;\n    document: any;\n    private window;\n    private copySubject;\n    copyResponse$: Observable<IClipboardResponse>;\n    private tempTextArea;\n    private config;\n    constructor(ngZone: NgZone, document: any, window: any);\n    configure(config: ClipboardParams): void;\n    copy(content: string): void;\n    get isSupported(): boolean;\n    isTargetValid(element: HTMLInputElement | HTMLTextAreaElement): boolean;\n    /**\n     * Attempts to copy from an input `targetElm`\n     */\n    copyFromInputElement(targetElm: HTMLInputElement | HTMLTextAreaElement, isFocus?: boolean): boolean;\n    /**\n     * This is a hack for IE11 to return `true` even if copy fails.\n     */\n    isCopySuccessInIE11(): boolean;\n    /**\n     * Creates a fake textarea element, sets its value from `text` property,\n     * and makes a selection on it.\n     */\n    copyFromContent(content: string, container?: HTMLElement): boolean;\n    /**\n     * Remove temporary textarea if any exists.\n     */\n    destroy(container?: HTMLElement): void;\n    /**\n     * Select the target html input element.\n     */\n    private selectTarget;\n    private copyText;\n    /**\n     * Moves focus away from `target` and back to the trigger, removes current selection.\n     */\n    private clearSelection;\n    /**\n     * Creates a fake textarea for copy command.\n     */\n    private createTempTextArea;\n    /**\n     * Pushes copy operation response to copySubject, to provide global access\n     * to the response.\n     */\n    pushCopyResponse(response: IClipboardResponse): void;\n    /**\n     * @deprecated use pushCopyResponse instead.\n     */\n    pushCopyReponse(response: IClipboardResponse): void;\n}\n"]}