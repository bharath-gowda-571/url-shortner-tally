{"ast":null,"code":"import _asyncToGenerator from \"/home/bharath/Desktop/drive2/tally-hackathon/url-shortner/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { getAuth } from 'firebase/auth';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nimport * as i2 from \"@angular/common/http\";\nexport let FirebaseAuthService = /*#__PURE__*/(() => {\n  class FirebaseAuthService {\n    constructor(firebaseAuth, _http) {\n      this.firebaseAuth = firebaseAuth;\n      this._http = _http;\n      this.isLoggedIn = false;\n    }\n\n    signin(email, password) {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        var error_msg = \"\";\n        yield _this.firebaseAuth.signInWithEmailAndPassword(email, password).then(res => {\n          _this.isLoggedIn = true;\n          const auth = getAuth();\n          const user = auth.currentUser;\n          var uid = user === null || user === void 0 ? void 0 : user.uid;\n          localStorage.setItem('user', uid.toString());\n        }).catch(e => {\n          error_msg = \"Wrong Email or Password\";\n        });\n        return error_msg;\n      })();\n    }\n\n    signup(email, password, first_name, last_name) {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        var error_msg = \"\";\n        yield _this2.firebaseAuth.createUserWithEmailAndPassword(email, password).then(res => {\n          _this2.isLoggedIn = true;\n          const auth = getAuth();\n          const user = auth.currentUser;\n          var uid = user === null || user === void 0 ? void 0 : user.uid;\n          localStorage.setItem('user', uid.toString());\n\n          _this2._http.put(\"https://url-shortner-418d4-default-rtdb.asia-southeast1.firebasedatabase.app/users/\" + uid + \".json\", {\n            \"first_name\": first_name,\n            \"last name\": last_name\n          }).subscribe(data => {});\n        }).catch(e => {\n          var e_str = e.toString();\n\n          if (e_str.search(\"email-already-in-use\") != -1) {\n            error_msg = \"User already exists\";\n          } else if (e_str.search(\"invalid-email\") != -1) {\n            error_msg = \"Invalid Email\";\n          } else if (e_str.search(\"weak-password\") != -1) {\n            error_msg = \"Weak Password\";\n          }\n\n          return error_msg;\n        });\n        return error_msg;\n      })();\n    }\n\n    logout() {\n      this.firebaseAuth.signOut();\n      localStorage.removeItem('user');\n    }\n\n    getUserFirstName() {\n      var _this3 = this;\n\n      return _asyncToGenerator(function* () {\n        var uid = localStorage.getItem(\"user\");\n        var first_name = yield _this3._http.get(\"https://url-shortner-418d4-default-rtdb.asia-southeast1.firebasedatabase.app/users/\" + uid.toString() + \"/first_name.json\").toPromise();\n        return first_name;\n      })();\n    }\n\n    getListofKeys() {\n      var _this4 = this;\n\n      return _asyncToGenerator(function* () {\n        return yield _this4._http.get(\"https://url-shortner-418d4-default-rtdb.asia-southeast1.firebasedatabase.app/shortened_urls.json\").toPromise();\n      })();\n    }\n\n    add_new_link(short_link, long_link) {\n      var _this5 = this;\n\n      return _asyncToGenerator(function* () {\n        yield _this5._http.put(\"https://url-shortner-418d4-default-rtdb.asia-southeast1.firebasedatabase.app/shortened_urls/\" + short_link + \".json\", {\n          \"fullink\": long_link\n        }).toPromise();\n        var uid = localStorage.getItem(\"user\");\n        var user_links = yield _this5._http.get(\"https://url-shortner-418d4-default-rtdb.asia-southeast1.firebasedatabase.app/users/\" + uid + \"/links.json\").toPromise();\n\n        if (user_links == null) {\n          user_links = [];\n        }\n\n        user_links.push({\n          fullink: long_link,\n          link: short_link\n        });\n        yield _this5._http.put(\"https://url-shortner-418d4-default-rtdb.asia-southeast1.firebasedatabase.app/users/\" + uid + \"/links.json\", user_links).toPromise();\n      })();\n    }\n\n    get_logs(key) {\n      var _this6 = this;\n\n      return _asyncToGenerator(function* () {\n        return yield _this6._http.get(\"https://url-shortner-418d4-default-rtdb.asia-southeast1.firebasedatabase.app/shortened_urls/\" + key + \"/logs.json\").toPromise();\n      })();\n    }\n\n    delete_link(link) {\n      var _this7 = this;\n\n      return _asyncToGenerator(function* () {\n        yield _this7._http.delete(\"https://url-shortner-418d4-default-rtdb.asia-southeast1.firebasedatabase.app/shortened_urls/\" + link + \".json\").toPromise();\n        var uid = localStorage.getItem(\"user\");\n        var list = yield _this7._http.get(\"https://url-shortner-418d4-default-rtdb.asia-southeast1.firebasedatabase.app/users/\" + uid + \"/links.json\").toPromise();\n        list.forEach((element, index) => {\n          if (element.link == link) list.splice(index, 1);\n        });\n        yield _this7._http.put(\"https://url-shortner-418d4-default-rtdb.asia-southeast1.firebasedatabase.app/users/\" + uid + \"/links.json\", list).toPromise();\n      })();\n    }\n\n  }\n\n  FirebaseAuthService.ɵfac = function FirebaseAuthService_Factory(t) {\n    return new (t || FirebaseAuthService)(i0.ɵɵinject(i1.AngularFireAuth), i0.ɵɵinject(i2.HttpClient));\n  };\n\n  FirebaseAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FirebaseAuthService,\n    factory: FirebaseAuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return FirebaseAuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}