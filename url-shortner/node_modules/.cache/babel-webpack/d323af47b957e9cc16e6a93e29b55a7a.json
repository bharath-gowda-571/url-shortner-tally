{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/players.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/autocomplete\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/core\";\n\nfunction BatsVsbowlComponent_mat_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r5, \" \");\n  }\n}\n\nfunction BatsVsbowlComponent_mat_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option2_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option2_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option2_r6, \" \");\n  }\n}\n\nfunction BatsVsbowlComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.error_msg);\n  }\n}\n\nexport class BatsVsbowlComponent {\n  constructor(_playerService) {\n    this._playerService = _playerService;\n    this.myControl1 = new FormControl();\n    this.myControl2 = new FormControl();\n    this.pop_name_map = new Map();\n    this.players = [];\n    this.popular_player_names = [];\n  }\n\n  ngOnInit() {\n    this._playerService.getPlayerPopNames().subscribe(data => {\n      this.players = data;\n\n      for (var i of this.players) {\n        this.popular_player_names.push(i.popular_name);\n        this.pop_name_map.set(i.popular_name, i.name);\n      }\n    });\n\n    this.filteredOptions1 = this.myControl1.valueChanges.pipe(startWith(''), map(value1 => this._filter(value1)));\n    this.filteredOptions2 = this.myControl2.valueChanges.pipe(startWith(''), map(value2 => this._filter(value2)));\n  }\n\n  _filter(value) {\n    const filterValue = value.toLowerCase();\n    return this.popular_player_names.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n  ButtonClick() {\n    var batsman = this.myControl1.value;\n    var bowler = this.myControl2.value;\n    console.log(this.pop_name_map.get(batsman), this.pop_name_map.get(bowler));\n    console.log(this.error_msg);\n\n    if (batsman == undefined) {\n      this.error_msg = \"Choose a batsman\";\n      return;\n    }\n\n    if (bowler == undefined) {\n      this.error_msg = \"Choose a bowler\";\n      return;\n    }\n  }\n\n}\n\nBatsVsbowlComponent.ɵfac = function BatsVsbowlComponent_Factory(t) {\n  return new (t || BatsVsbowlComponent)(i0.ɵɵdirectiveInject(i1.PlayersService));\n};\n\nBatsVsbowlComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BatsVsbowlComponent,\n  selectors: [[\"app-bats-vsbowl\"]],\n  decls: 22,\n  vars: 10,\n  consts: [[1, \"main-container\"], [\"appearance\", \"outline\"], [\"type\", \"text\", \"placeholder\", \"Search Batsman\", \"aria-label\", \"Batsman\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\"], [\"auto1\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"placeholder\", \"Search Bowler\", \"aria-label\", \"Bowler\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\"], [\"auto2\", \"matAutocomplete\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", 3, \"click\"], [4, \"ngIf\"], [3, \"value\"]],\n  template: function BatsVsbowlComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"form\");\n      i0.ɵɵelementStart(2, \"mat-form-field\", 1);\n      i0.ɵɵelementStart(3, \"mat-label\");\n      i0.ɵɵtext(4, \"Batsman\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 2);\n      i0.ɵɵelementStart(6, \"mat-autocomplete\", null, 3);\n      i0.ɵɵtemplate(8, BatsVsbowlComponent_mat_option_8_Template, 2, 2, \"mat-option\", 4);\n      i0.ɵɵpipe(9, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"form\");\n      i0.ɵɵelementStart(11, \"mat-form-field\", 1);\n      i0.ɵɵelementStart(12, \"mat-label\");\n      i0.ɵɵtext(13, \"Bowler\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 5);\n      i0.ɵɵelementStart(15, \"mat-autocomplete\", null, 6);\n      i0.ɵɵtemplate(17, BatsVsbowlComponent_mat_option_17_Template, 2, 2, \"mat-option\", 4);\n      i0.ɵɵpipe(18, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function BatsVsbowlComponent_Template_button_click_19_listener() {\n        return ctx.ButtonClick();\n      });\n      i0.ɵɵtext(20, \"Get Data\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(21, BatsVsbowlComponent_div_21_Template, 2, 1, \"div\", 8);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(7);\n\n      const _r2 = i0.ɵɵreference(16);\n\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formControl\", ctx.myControl1)(\"matAutocomplete\", _r0);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(9, 6, ctx.filteredOptions1));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formControl\", ctx.myControl2)(\"matAutocomplete\", _r2);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(18, 8, ctx.filteredOptions2));\n    }\n  },\n  directives: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i3.MatFormField, i3.MatLabel, i4.MatInput, i2.DefaultValueAccessor, i5.MatAutocompleteTrigger, i2.NgControlStatus, i2.FormControlDirective, i5.MatAutocomplete, i6.NgForOf, i7.MatButton, i6.NgIf, i8.MatOption],\n  pipes: [i6.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJiYXRzLXZzYm93bC5jb21wb25lbnQuc2NzcyJ9 */\"]\n});","map":{"version":3,"sources":["/drive2/CricketStats_website/iplversus2/src/app/components/bats-vsbowl/bats-vsbowl.component.ts","/drive2/CricketStats_website/iplversus2/src/app/components/bats-vsbowl/bats-vsbowl.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {Observable, of} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\nimport { PlayerPopName } from 'src/app/player_pop_names';\nimport { PlayersService } from 'src/app/services/players.service';\n@Component({\n  selector: 'app-bats-vsbowl',\n  templateUrl: './bats-vsbowl.component.html',\n  styleUrls: ['./bats-vsbowl.component.scss']\n})\nexport class BatsVsbowlComponent implements OnInit {\n  constructor(private _playerService:PlayersService){}\n\n  myControl1:any = new FormControl();\n  myControl2:any = new FormControl();\n\n  pop_name_map=new Map();\n\n  public players:PlayerPopName[]=[];\n  public popular_player_names:string[]=[];\n  \n  filteredOptions1!: Observable<string[]> ;\n  filteredOptions2!: Observable<string[]> ;\n  error_msg!:string;\n\n  ngOnInit() {\n\n    this._playerService.getPlayerPopNames().subscribe(data=>{this.players = data;\n      for(var i of this.players)\n      {\n        this.popular_player_names.push(i.popular_name);\n        this.pop_name_map.set(i.popular_name,i.name);\n      }\n    });\n\n  \n    \n    this.filteredOptions1 = this.myControl1.valueChanges\n      .pipe(\n        startWith(''),\n        map(value1 => this._filter(<string>value1))\n      );\n      this.filteredOptions2 = this.myControl2.valueChanges\n      .pipe(\n        startWith(''),\n        map(value2 => this._filter(<string>value2))\n      );\n  }\n  \n  \n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    \n    \n    return this.popular_player_names.filter(option => option.toLowerCase().includes(filterValue));\n  }\n  \n  ButtonClick(){\n    var batsman=this.myControl1.value;\n    var bowler=this.myControl2.value;\n    console.log(this.pop_name_map.get(batsman),this.pop_name_map.get(bowler));\n    console.log(this.error_msg);\n    if(batsman==undefined)\n    {\n      this.error_msg=\"Choose a batsman\"\n      return\n    }\n    if (bowler==undefined){\n      this.error_msg=\"Choose a bowler\"\n      return\n    }\n  }\n}\n","<div class=\"main-container\">\n<form >\n    <mat-form-field  appearance=\"outline\">\n      <mat-label>Batsman</mat-label>\n      <input type=\"text\"\n             placeholder=\"Search Batsman\"\n             aria-label=\"Batsman\"\n             matInput\n             [formControl]=\"myControl1\"\n             [matAutocomplete]=\"auto1\">\n      <mat-autocomplete #auto1=\"matAutocomplete\">\n        <mat-option *ngFor=\"let option of filteredOptions1 | async\" [value]=\"option\">\n          {{option}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n  </form>\n  \n  <form >\n    <mat-form-field  appearance=\"outline\">\n      <mat-label>Bowler</mat-label>\n      <input type=\"text\"\n             placeholder=\"Search Bowler\"\n             aria-label=\"Bowler\"\n             matInput\n             [formControl]=\"myControl2\"\n             [matAutocomplete]=\"auto2\">\n      <mat-autocomplete #auto2=\"matAutocomplete\">\n        <mat-option *ngFor=\"let option2 of filteredOptions2 | async\" [value]=\"option2\">\n          {{option2}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n  </form>\n  <button mat-flat-button color=\"primary\" (click)=\"ButtonClick()\">Get Data</button>\n  <div *ngIf>{{error_msg}}</div>\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}