{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/players.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/autocomplete\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/core\";\n\nfunction BatsVsTeamSearchComponent_mat_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r5, \" \");\n  }\n}\n\nfunction BatsVsTeamSearchComponent_mat_option_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option2_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option2_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option2_r6, \" \");\n  }\n}\n\nfunction BatsVsTeamSearchComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.error_msg);\n  }\n}\n\nexport class BatsVsTeamSearchComponent {\n  constructor(_playerService, router) {\n    this._playerService = _playerService;\n    this.router = router;\n    this.pop_name_map = new Map();\n    this.players = [];\n    this.popular_player_names = [];\n    this.teams = [];\n    this.team_names = [];\n  }\n\n  ngOnInit() {\n    this.checkValidity = new FormGroup({\n      'myControl1': new FormControl(),\n      'myControl2': new FormControl()\n    });\n\n    this._playerService.getPlayerPopNames().subscribe(data => {\n      this.players = data;\n\n      for (var i of this.players) {\n        this.popular_player_names.push(i.popular_name);\n        this.pop_name_map.set(i.popular_name, i.name);\n      }\n    });\n\n    this._playerService.getTeamNames().subscribe(data => {\n      this.teams = data;\n\n      for (var i of this.teams) {\n        this.team_names.push(i);\n      }\n    });\n\n    this.filteredOptions1 = this.checkValidity.get('myControl1').valueChanges.pipe(startWith(''), map(value1 => this._filterbats(value1)));\n    this.filteredOptions2 = this.myControl2.valueChanges.pipe(startWith(''), map(value2 => this._filterteams(value2)));\n  }\n\n  _filterbats(value) {\n    const filterValue = value.toLowerCase();\n    return this.popular_player_names.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n  _filterteams(value) {\n    const filterValue = value.toLowerCase();\n    return this.team_names.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n  ButtonClick() {\n    var batsman = this.myControl1.value;\n    var team = this.myControl2.value;\n    var batsman_code_name = this.pop_name_map.get(batsman);\n\n    if (batsman_code_name == undefined) {\n      this.error_msg = \"Choose a valid batsman name\";\n      this.myControl1;\n      return;\n    }\n\n    if (!this.team_names.includes(team)) {\n      this.error_msg = \"Choose a valid team name\";\n      return;\n    }\n\n    this.router.navigate(['/batsvsteamdetails', batsman_code_name, team]);\n  }\n\n}\n\nBatsVsTeamSearchComponent.ɵfac = function BatsVsTeamSearchComponent_Factory(t) {\n  return new (t || BatsVsTeamSearchComponent)(i0.ɵɵdirectiveInject(i1.PlayersService), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nBatsVsTeamSearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BatsVsTeamSearchComponent,\n  selectors: [[\"app-bats-vs-team-search\"]],\n  decls: 25,\n  vars: 10,\n  consts: [[1, \"main-container\"], [1, \"form-container\"], [2, \"text-align\", \"center\", \"align-items\", \"center\", 3, \"formGroup\"], [\"appearance\", \"outline\"], [\"type\", \"text\", \"placeholder\", \"Search Batsman\", \"aria-label\", \"Batsman\", \"matInput\", \"\", \"formControlName\", \"myControl1\", 3, \"matAutocomplete\"], [\"auto1\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"placeholder\", \"Search Team\", \"aria-label\", \"Team\", \"matInput\", \"\", \"formControlName\", \"myControl2\", 3, \"matAutocomplete\"], [\"auto2\", \"matAutocomplete\"], [\"class\", \"error-msg\", 4, \"ngIf\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", \"onsubmit\", \"ButtonClick()\"], [3, \"value\"], [1, \"error-msg\"]],\n  template: function BatsVsTeamSearchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"form\", 2);\n      i0.ɵɵelementStart(3, \"mat-form-field\", 3);\n      i0.ɵɵelementStart(4, \"mat-label\");\n      i0.ɵɵtext(5, \"Batsman\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 4);\n      i0.ɵɵelementStart(7, \"mat-autocomplete\", null, 5);\n      i0.ɵɵtemplate(9, BatsVsTeamSearchComponent_mat_option_9_Template, 2, 2, \"mat-option\", 6);\n      i0.ɵɵpipe(10, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"br\");\n      i0.ɵɵelementStart(12, \"mat-form-field\", 3);\n      i0.ɵɵelementStart(13, \"mat-label\");\n      i0.ɵɵtext(14, \"Team\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 7);\n      i0.ɵɵelementStart(16, \"mat-autocomplete\", null, 8);\n      i0.ɵɵtemplate(18, BatsVsTeamSearchComponent_mat_option_18_Template, 2, 2, \"mat-option\", 6);\n      i0.ɵɵpipe(19, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"br\");\n      i0.ɵɵtemplate(21, BatsVsTeamSearchComponent_div_21_Template, 2, 1, \"div\", 9);\n      i0.ɵɵelement(22, \"br\");\n      i0.ɵɵelementStart(23, \"button\", 10);\n      i0.ɵɵtext(24, \"Get Data\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(8);\n\n      const _r2 = i0.ɵɵreference(17);\n\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.checkValidity);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"matAutocomplete\", _r0);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(10, 6, ctx.filteredOptions1));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"matAutocomplete\", _r2);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(19, 8, ctx.filteredOptions2));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.error_msg != undefined);\n    }\n  },\n  directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i4.MatFormField, i4.MatLabel, i5.MatInput, i3.DefaultValueAccessor, i6.MatAutocompleteTrigger, i3.NgControlStatus, i3.FormControlName, i6.MatAutocomplete, i7.NgForOf, i7.NgIf, i8.MatButton, i9.MatOption],\n  pipes: [i7.AsyncPipe],\n  styles: [\".main-container[_ngcontent-%COMP%] {\\n  height: 80vh;\\n  text-align: center;\\n  background-image: url('batsman_large_background.png'), url('bowler_large_background.png');\\n  background-position: right, left;\\n  background-repeat: no-repeat, no-repeat;\\n  align-content: center;\\n}\\n\\n.form-container[_ngcontent-%COMP%] {\\n  padding-top: 100px;\\n}\\n\\n.error-msg[_ngcontent-%COMP%] {\\n  width: 40%;\\n  margin: 0 auto;\\n  color: red;\\n}\\n\\n@media only screen and (max-width: 992px) {\\n  .main-container[_ngcontent-%COMP%] {\\n    height: 80vh;\\n    text-align: center;\\n    background: none;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhdHMtdnMtdGVhbS1zZWFyY2guY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0k7RUFFSSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSx5RkFBQTtFQUNBLGdDQUFBO0VBQ0EsdUNBQUE7RUFDQSxxQkFBQTtBQURSOztBQUlBO0VBQ0ksa0JBQUE7QUFESjs7QUFLQTtFQUNJLFVBQUE7RUFDQSxjQUFBO0VBQ0EsVUFBQTtBQUZKOztBQUtBO0VBQ0k7SUFDSSxZQUFBO0lBQ0Esa0JBQUE7SUFDQSxnQkFBQTtFQUZOO0FBQ0YiLCJmaWxlIjoiYmF0cy12cy10ZWFtLXNlYXJjaC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYWlue1xyXG4gICAgJi1jb250YWluZXJ7XHJcbiAgICAgICAgLy9tYXJnaW4tdG9wOiAxMDBweDtcclxuICAgICAgICBoZWlnaHQ6IDgwdmg7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi8uLi8uLi9hc3NldHMvYmF0c21hbl9sYXJnZV9iYWNrZ3JvdW5kLnBuZyksdXJsKC4uLy4uLy4uL2Fzc2V0cy9ib3dsZXJfbGFyZ2VfYmFja2dyb3VuZC5wbmcpO1xyXG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IHJpZ2h0LGxlZnQ7XHJcbiAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdCxuby1yZXBlYXQ7XHJcbiAgICAgICAgYWxpZ24tY29udGVudDogY2VudGVyO1xyXG4gICAgfVxyXG59XHJcbi5mb3JtLWNvbnRhaW5lcntcclxuICAgIHBhZGRpbmctdG9wOiAxMDBweDtcclxuXHJcbn1cclxuXHJcbi5lcnJvci1tc2d7XHJcbiAgICB3aWR0aDogNDAlO1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICBjb2xvcjogcmVkO1xyXG4gICAgXHJcbn1cclxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTJweCkge1xyXG4gICAgLm1haW4tY29udGFpbmVye1xyXG4gICAgICAgIGhlaWdodDogODB2aDtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgYmFja2dyb3VuZDogbm9uZTtcclxuICAgIH1cclxuICB9Il19 */\"]\n});","map":{"version":3,"sources":["D:\\Angular projects\\iplversus_website\\src\\app\\components\\bats-vs-team-search\\bats-vs-team-search.component.ts","D:\\Angular projects\\iplversus_website\\src\\app\\components\\bats-vs-team-search\\bats-vs-team-search.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport {FormControl, FormGroup} from '@angular/forms';\r\nimport {Observable, of} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport { PlayerPopName } from 'src/app/player_pop_names';\r\nimport { PlayersService } from 'src/app/services/players.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-bats-vs-team-search',\r\n  templateUrl: './bats-vs-team-search.component.html',\r\n  styleUrls: ['./bats-vs-team-search.component.scss']\r\n})\r\n\r\nexport class BatsVsTeamSearchComponent implements OnInit {\r\n\r\n  checkValidity!: FormGroup;\r\n\r\n  constructor(private _playerService:PlayersService,private router:Router){}\r\n\r\n\r\n  pop_name_map=new Map();\r\n\r\n  public players:PlayerPopName[]=[];\r\n  public popular_player_names:string[]=[];\r\n  public teams:String[]=[];\r\n  public team_names:String[]=[];\r\n  \r\n  filteredOptions1!: Observable<string[]> ;\r\n  filteredOptions2!: Observable<string[]> ;\r\n  error_msg!:string;\r\n\r\n  ngOnInit() {\r\n\r\n    this.checkValidity = new FormGroup({\r\n      'myControl1': new FormControl(),\r\n      'myControl2': new FormControl()\r\n    })\r\n\r\n    this._playerService.getPlayerPopNames().subscribe(data=>{\r\n      this.players = data;\r\n      for(var i of this.players){\r\n        this.popular_player_names.push(i.popular_name);\r\n        this.pop_name_map.set(i.popular_name,i.name);\r\n      }\r\n    });\r\n\r\n    this._playerService.getTeamNames().subscribe(data=>{\r\n      this.teams = data;\r\n      for(var i of this.teams){\r\n        this.team_names.push(i);\r\n      }\r\n    });\r\n\r\n    this.filteredOptions1 = this.checkValidity.get('myControl1').valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value1 => this._filterbats(<string>value1))\r\n      );\r\n    this.filteredOptions2 = this.myControl2.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value2 => this._filterteams(<string>value2))\r\n      );\r\n  }\r\n  \r\n  \r\n  private _filterbats(value: string): String[] {\r\n    const filterValue = value.toLowerCase();  \r\n    return this.popular_player_names.filter(option => option.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  private _filterteams(value: string): String[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.team_names.filter(option => option.toLowerCase().includes(filterValue));\r\n  }\r\n  \r\n  ButtonClick(){\r\n    \r\n    var batsman=this.myControl1.value;\r\n    var team=this.myControl2.value;\r\n    var batsman_code_name=this.pop_name_map.get(batsman)\r\n    \r\n    if(batsman_code_name==undefined){\r\n      this.error_msg=\"Choose a valid batsman name\"\r\n      this.myControl1\r\n      return\r\n    }\r\n\r\n    if(!this.team_names.includes(team)){\r\n      this.error_msg=\"Choose a valid team name\"\r\n      return\r\n    }\r\n\r\n    this.router.navigate(['/batsvsteamdetails',batsman_code_name,team]);\r\n  }\r\n}","<div class=\"main-container\">\r\n    <div class=\"form-container\">\r\n    <form style=\"text-align: center;align-items: center;\" [formGroup]=\"checkValidity\">\r\n        <mat-form-field appearance=\"outline\">\r\n            <mat-label>Batsman</mat-label>\r\n            <input type=\"text\" placeholder=\"Search Batsman\" aria-label=\"Batsman\" matInput formControlName=\"myControl1\"\r\n                [matAutocomplete]=\"auto1\">\r\n            <mat-autocomplete #auto1=\"matAutocomplete\">\r\n                <mat-option *ngFor=\"let option of filteredOptions1 | async\" [value]=\"option\">\r\n                    {{option}}\r\n                </mat-option>\r\n            </mat-autocomplete>\r\n        </mat-form-field>\r\n    \r\n    <br>\r\n        <mat-form-field appearance=\"outline\">\r\n            <mat-label>Team</mat-label>\r\n            <input type=\"text\" placeholder=\"Search Team\" aria-label=\"Team\" matInput formControlName=\"myControl2\"\r\n                [matAutocomplete]=\"auto2\">\r\n            <mat-autocomplete #auto2=\"matAutocomplete\">\r\n                <mat-option *ngFor=\"let option2 of filteredOptions2 | async\" [value]=\"option2\">\r\n                    {{option2}}\r\n                </mat-option>\r\n            </mat-autocomplete>\r\n        </mat-form-field>\r\n        <br>\r\n        <div *ngIf=\"error_msg!=undefined\" class=\"error-msg\">{{error_msg}}</div>\r\n        <br>\r\n    <button mat-flat-button color=\"primary\" type=\"submit\" onsubmit=\"ButtonClick()\" >Get Data</button>\r\n    </form>\r\n    </div>\r\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}