{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/players.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/platform-browser\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/autocomplete\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/core\";\n\nfunction BatsVsbowlComponent_mat_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r5, \" \");\n  }\n}\n\nfunction BatsVsbowlComponent_mat_option_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option2_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option2_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option2_r6, \" \");\n  }\n}\n\nfunction BatsVsbowlComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.error_msg);\n  }\n}\n\nexport class BatsVsbowlComponent {\n  constructor(_playerService, router, titleService) {\n    this._playerService = _playerService;\n    this.router = router;\n    this.titleService = titleService;\n    this.myControl1 = new FormControl();\n    this.myControl2 = new FormControl();\n    this.pop_name_map = new Map();\n    this.players = [];\n    this.popular_player_names = [];\n  }\n\n  ngOnInit() {\n    this.titleService.setTitle(\"Batsman Vs Bowler Search\");\n\n    this._playerService.getPlayerPopNames().subscribe(data => {\n      this.players = data;\n\n      for (var i of this.players) {\n        this.popular_player_names.push(i.popular_name);\n        this.pop_name_map.set(i.popular_name, i.name);\n      }\n    });\n\n    this.filteredOptions1 = this.myControl1.valueChanges.pipe(startWith(''), map(value1 => this._filter(value1)));\n    this.filteredOptions2 = this.myControl2.valueChanges.pipe(startWith(''), map(value2 => this._filter(value2)));\n  }\n\n  _filter(value) {\n    const filterValue = value.toLowerCase();\n    return this.popular_player_names.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n  ButtonClick() {\n    var batsman = this.myControl1.value;\n    var bowler = this.myControl2.value;\n    var batsman_code_name = this.pop_name_map.get(batsman);\n    var bowler_code_name = this.pop_name_map.get(bowler);\n\n    if (batsman_code_name == undefined) {\n      this.error_msg = \"Choose a Batsman\";\n    } else if (bowler_code_name == undefined) {\n      this.error_msg = \"Choose a Bowler\";\n    } else if (batsman_code_name == bowler_code_name) {\n      this.error_msg = \"Batsman and Bowler cannot be same\";\n    } else {\n      this.router.navigate(['/batsvsbowldetails', batsman_code_name, bowler_code_name]);\n    }\n  }\n\n}\n\nBatsVsbowlComponent.ɵfac = function BatsVsbowlComponent_Factory(t) {\n  return new (t || BatsVsbowlComponent)(i0.ɵɵdirectiveInject(i1.PlayersService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.Title));\n};\n\nBatsVsbowlComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BatsVsbowlComponent,\n  selectors: [[\"app-bats-vsbowl\"]],\n  decls: 25,\n  vars: 11,\n  consts: [[1, \"main-container\"], [1, \"form-container\"], [2, \"text-align\", \"center\", \"align-items\", \"center\"], [\"appearance\", \"outline\"], [\"type\", \"text\", \"placeholder\", \"Search Batsman\", \"aria-label\", \"Batsman\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\"], [\"auto1\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"placeholder\", \"Search Bowler\", \"aria-label\", \"Bowler\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\"], [\"auto2\", \"matAutocomplete\"], [\"class\", \"error-msg\", 4, \"ngIf\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", 3, \"click\"], [3, \"value\"], [1, \"error-msg\"]],\n  template: function BatsVsbowlComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"form\", 2);\n      i0.ɵɵelementStart(3, \"mat-form-field\", 3);\n      i0.ɵɵelementStart(4, \"mat-label\");\n      i0.ɵɵtext(5, \"Batsman\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 4);\n      i0.ɵɵelementStart(7, \"mat-autocomplete\", null, 5);\n      i0.ɵɵtemplate(9, BatsVsbowlComponent_mat_option_9_Template, 2, 2, \"mat-option\", 6);\n      i0.ɵɵpipe(10, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"br\");\n      i0.ɵɵelementStart(12, \"mat-form-field\", 3);\n      i0.ɵɵelementStart(13, \"mat-label\");\n      i0.ɵɵtext(14, \"Bowler\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 7);\n      i0.ɵɵelementStart(16, \"mat-autocomplete\", null, 8);\n      i0.ɵɵtemplate(18, BatsVsbowlComponent_mat_option_18_Template, 2, 2, \"mat-option\", 6);\n      i0.ɵɵpipe(19, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"br\");\n      i0.ɵɵtemplate(21, BatsVsbowlComponent_div_21_Template, 2, 1, \"div\", 9);\n      i0.ɵɵelement(22, \"br\");\n      i0.ɵɵelementStart(23, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function BatsVsbowlComponent_Template_button_click_23_listener() {\n        return ctx.ButtonClick();\n      });\n      i0.ɵɵtext(24, \"Get Data\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(8);\n\n      const _r2 = i0.ɵɵreference(17);\n\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formControl\", ctx.myControl1)(\"matAutocomplete\", _r0);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(10, 7, ctx.filteredOptions1));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formControl\", ctx.myControl2)(\"matAutocomplete\", _r2);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(19, 9, ctx.filteredOptions2));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.error_msg != undefined);\n    }\n  },\n  directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i5.MatFormField, i5.MatLabel, i6.MatInput, i4.DefaultValueAccessor, i7.MatAutocompleteTrigger, i4.NgControlStatus, i4.FormControlDirective, i7.MatAutocomplete, i8.NgForOf, i8.NgIf, i9.MatButton, i10.MatOption],\n  pipes: [i8.AsyncPipe],\n  styles: [\".main-container[_ngcontent-%COMP%] {\\n  height: 80vh;\\n  text-align: center;\\n  background-image: url('batsman_large_background.png'), url('bowler_large_background.png');\\n  background-position: right, left;\\n  background-repeat: no-repeat, no-repeat;\\n  align-content: center;\\n}\\n\\n.form-container[_ngcontent-%COMP%] {\\n  padding-top: 100px;\\n}\\n\\n@media only screen and (max-width: 992px) {\\n  .main-container[_ngcontent-%COMP%] {\\n    height: 80vh;\\n    text-align: center;\\n    background: none;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhdHMtdnNib3dsLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBRUksWUFBQTtFQUNBLGtCQUFBO0VBQ0EseUZBQUE7RUFDQSxnQ0FBQTtFQUNBLHVDQUFBO0VBQ0EscUJBQUE7QUFEUjs7QUFJQTtFQUNJLGtCQUFBO0FBREo7O0FBSUE7RUFDSTtJQUNJLFlBQUE7SUFDQSxrQkFBQTtJQUNBLGdCQUFBO0VBRE47QUFDRiIsImZpbGUiOiJiYXRzLXZzYm93bC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYWlue1xyXG4gICAgJi1jb250YWluZXJ7XHJcbiAgICAgICAgXHJcbiAgICAgICAgaGVpZ2h0OiA4MHZoO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vLi4vLi4vYXNzZXRzL2JhdHNtYW5fbGFyZ2VfYmFja2dyb3VuZC5wbmcpLHVybCguLi8uLi8uLi9hc3NldHMvYm93bGVyX2xhcmdlX2JhY2tncm91bmQucG5nKTtcclxuICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiByaWdodCxsZWZ0O1xyXG4gICAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQsbm8tcmVwZWF0O1xyXG4gICAgICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIH1cclxufVxyXG4uZm9ybS1jb250YWluZXJ7XHJcbiAgICBwYWRkaW5nLXRvcDogMTAwcHg7XHJcbn1cclxuXHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTkycHgpIHtcclxuICAgIC5tYWluLWNvbnRhaW5lcntcclxuICAgICAgICBoZWlnaHQ6IDgwdmg7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGJhY2tncm91bmQ6IG5vbmU7XHJcbiAgICB9XHJcbiAgfSJdfQ== */\"]\n});","map":{"version":3,"sources":["D:\\Angular projects\\iplversus_website\\src\\app\\components\\bats-vsbowl\\bats-vsbowl.component.ts","D:\\Angular projects\\iplversus_website\\src\\app\\components\\bats-vsbowl\\bats-vsbowl.component.html"],"names":[],"mappings":"AACA,SAAQ,WAAR,QAA0B,gBAA1B;AAEA,SAAQ,GAAR,EAAa,SAAb,QAA6B,gBAA7B;;;;;;;;;;;;;;;ACSQ,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,YAAA,EAAA,EAAA;AACE,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA;AACF,IAAA,EAAA,CAAA,YAAA;;;;;AAF4D,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA;AAC1D,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,kBAAA,CAAA,GAAA,EAAA,SAAA,EAAA,GAAA;;;;;;AAcF,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,YAAA,EAAA,EAAA;AACE,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA;AACF,IAAA,EAAA,CAAA,YAAA;;;;;AAF6D,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,UAAA;AAC3D,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,kBAAA,CAAA,GAAA,EAAA,UAAA,EAAA,GAAA;;;;;;AAKN,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA;AAAoD,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA;AAAa,IAAA,EAAA,CAAA,YAAA;;;;;AAAb,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,SAAA;;;;ADnBxD,OAAM,MAAO,mBAAP,CAA0B;AAC9B,EAAA,WAAA,CAAoB,cAApB,EAA0D,MAA1D,EAAgF,YAAhF,EAAkG;AAA9E,SAAA,cAAA,GAAA,cAAA;AAAsC,SAAA,MAAA,GAAA,MAAA;AAAsB,SAAA,YAAA,GAAA,YAAA;AAEhF,SAAA,UAAA,GAAiB,IAAI,WAAJ,EAAjB;AACA,SAAA,UAAA,GAAiB,IAAI,WAAJ,EAAjB;AAEA,SAAA,YAAA,GAAa,IAAI,GAAJ,EAAb;AAEO,SAAA,OAAA,GAAwB,EAAxB;AACA,SAAA,oBAAA,GAA8B,EAA9B;AAR8F;;AAcrG,EAAA,QAAQ,GAAA;AAEN,SAAK,YAAL,CAAkB,QAAlB,CAA2B,0BAA3B;;AACA,SAAK,cAAL,CAAoB,iBAApB,GAAwC,SAAxC,CAAkD,IAAI,IAAE;AACtD,WAAK,OAAL,GAAe,IAAf;;AACA,WAAI,IAAI,CAAR,IAAa,KAAK,OAAlB,EACA;AACE,aAAK,oBAAL,CAA0B,IAA1B,CAA+B,CAAC,CAAC,YAAjC;AACA,aAAK,YAAL,CAAkB,GAAlB,CAAsB,CAAC,CAAC,YAAxB,EAAqC,CAAC,CAAC,IAAvC;AACD;AACF,KAPD;;AASA,SAAK,gBAAL,GAAwB,KAAK,UAAL,CAAgB,YAAhB,CACrB,IADqB,CAEpB,SAAS,CAAC,EAAD,CAFW,EAGpB,GAAG,CAAC,MAAM,IAAI,KAAK,OAAL,CAAqB,MAArB,CAAX,CAHiB,CAAxB;AAKA,SAAK,gBAAL,GAAwB,KAAK,UAAL,CAAgB,YAAhB,CACrB,IADqB,CAEpB,SAAS,CAAC,EAAD,CAFW,EAGpB,GAAG,CAAC,MAAM,IAAI,KAAK,OAAL,CAAqB,MAArB,CAAX,CAHiB,CAAxB;AAKD;;AAGO,EAAA,OAAO,CAAC,KAAD,EAAc;AAC3B,UAAM,WAAW,GAAG,KAAK,CAAC,WAAN,EAApB;AAGA,WAAO,KAAK,oBAAL,CAA0B,MAA1B,CAAiC,MAAM,IAAI,MAAM,CAAC,WAAP,GAAqB,QAArB,CAA8B,WAA9B,CAA3C,CAAP;AACD;;AAED,EAAA,WAAW,GAAA;AAET,QAAI,OAAO,GAAC,KAAK,UAAL,CAAgB,KAA5B;AACA,QAAI,MAAM,GAAC,KAAK,UAAL,CAAgB,KAA3B;AACA,QAAI,iBAAiB,GAAC,KAAK,YAAL,CAAkB,GAAlB,CAAsB,OAAtB,CAAtB;AACA,QAAI,gBAAgB,GAAC,KAAK,YAAL,CAAkB,GAAlB,CAAsB,MAAtB,CAArB;;AAEA,QAAG,iBAAiB,IAAE,SAAtB,EAAgC;AAC9B,WAAK,SAAL,GAAe,kBAAf;AAED,KAHD,MAKK,IAAG,gBAAgB,IAAE,SAArB,EAA+B;AAClC,WAAK,SAAL,GAAe,iBAAf;AAED,KAHI,MAKA,IAAG,iBAAiB,IAAE,gBAAtB,EAAuC;AAC1C,WAAK,SAAL,GAAe,mCAAf;AAED,KAHI,MAID;AACJ,WAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,oBAAD,EAAsB,iBAAtB,EAAwC,gBAAxC,CAArB;AAEC;AACF;;AAxE6B;;;mBAAnB,mB,EAAmB,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,cAAA,C,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,MAAA,C,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,KAAA,C;AAAA,C;;;QAAnB,mB;AAAmB,EAAA,SAAA,EAAA,CAAA,CAAA,iBAAA,CAAA,C;AAAA,EAAA,KAAA,EAAA,E;AAAA,EAAA,IAAA,EAAA,E;AAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,gBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,gBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,YAAA,EAAA,QAAA,EAAA,aAAA,EAAA,QAAA,CAAA,EAAA,CAAA,YAAA,EAAA,SAAA,CAAA,EAAA,CAAA,MAAA,EAAA,MAAA,EAAA,aAAA,EAAA,gBAAA,EAAA,YAAA,EAAA,SAAA,EAAA,UAAA,EAAA,EAAA,EAAA,CAAA,EAAA,aAAA,EAAA,iBAAA,CAAA,EAAA,CAAA,OAAA,EAAA,iBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,MAAA,EAAA,MAAA,EAAA,aAAA,EAAA,eAAA,EAAA,YAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,EAAA,CAAA,EAAA,aAAA,EAAA,iBAAA,CAAA,EAAA,CAAA,OAAA,EAAA,iBAAA,CAAA,EAAA,CAAA,OAAA,EAAA,WAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,OAAA,EAAA,SAAA,EAAA,CAAA,EAAA,OAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,CAAA,EAAA,CAAA,CAAA,EAAA,WAAA,CAAA,C;AAAA,EAAA,QAAA,EAAA,SAAA,4BAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;ACdhC,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA;AACI,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,gBAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,WAAA;AAAW,MAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,SAAA;AAAO,MAAA,EAAA,CAAA,YAAA;AAClB,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA;AAMA,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,kBAAA,EAAA,IAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,yCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA;;AAGF,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,IAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,gBAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,WAAA;AAAW,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,QAAA;AAAM,MAAA,EAAA,CAAA,YAAA;AACjB,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,OAAA,EAAA,CAAA;AAMA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,kBAAA,EAAA,IAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,0CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA;;AAGF,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,IAAA;AACA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,mCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AACA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,IAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,QAAA,EAAA,EAAA;AAAyC,MAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,qDAAA,GAAA;AAAA,eAAS,GAAA,CAAA,WAAA,EAAT;AAAsB,OAAtB;AAAwB,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,UAAA;AAAQ,MAAA,EAAA,CAAA,YAAA;AAE3E,MAAA,EAAA,CAAA,YAAA;AAEF,MAAA,EAAA,CAAA,YAAA;AACA,MAAA,EAAA,CAAA,YAAA;;;;;;;;AA/Ba,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,aAAA,EAAA,GAAA,CAAA,UAAA,EAA0B,iBAA1B,EAA0B,GAA1B;AAG0B,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,CAAA,EAAA,GAAA,CAAA,gBAAA,CAAA;AAY1B,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,aAAA,EAAA,GAAA,CAAA,UAAA,EAA0B,iBAA1B,EAA0B,GAA1B;AAG2B,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,CAAA,EAAA,GAAA,CAAA,gBAAA,CAAA;AAM9B,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,SAAA,IAAA,SAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {Observable, of} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport { PlayerPopName } from 'src/app/player_pop_names';\r\nimport { PlayersService } from 'src/app/services/players.service';\r\nimport { Router } from '@angular/router';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-bats-vsbowl',\r\n  templateUrl: './bats-vsbowl.component.html',\r\n  styleUrls: ['./bats-vsbowl.component.scss']\r\n})\r\nexport class BatsVsbowlComponent implements OnInit {\r\n  constructor(private _playerService:PlayersService,private router:Router,private titleService:Title){}\r\n\r\n  myControl1:any = new FormControl();\r\n  myControl2:any = new FormControl();\r\n\r\n  pop_name_map=new Map();\r\n\r\n  public players:PlayerPopName[]=[];\r\n  public popular_player_names:string[]=[];\r\n  \r\n  filteredOptions1!: Observable<string[]> ;\r\n  filteredOptions2!: Observable<string[]> ;\r\n  error_msg!:string;\r\n\r\n  ngOnInit() {\r\n\r\n    this.titleService.setTitle(\"Batsman Vs Bowler Search\")\r\n    this._playerService.getPlayerPopNames().subscribe(data=>{\r\n      this.players = data;\r\n      for(var i of this.players)\r\n      {\r\n        this.popular_player_names.push(i.popular_name);\r\n        this.pop_name_map.set(i.popular_name,i.name);\r\n      }\r\n    });\r\n\r\n    this.filteredOptions1 = this.myControl1.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value1 => this._filter(<string>value1))\r\n      );\r\n    this.filteredOptions2 = this.myControl2.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value2 => this._filter(<string>value2))\r\n      );\r\n  }\r\n  \r\n  \r\n  private _filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n    \r\n    \r\n    return this.popular_player_names.filter(option => option.toLowerCase().includes(filterValue));\r\n  }\r\n  \r\n  ButtonClick(){\r\n    \r\n    var batsman=this.myControl1.value;\r\n    var bowler=this.myControl2.value;\r\n    var batsman_code_name=this.pop_name_map.get(batsman)\r\n    var bowler_code_name=this.pop_name_map.get(bowler);\r\n    \r\n    if(batsman_code_name==undefined){\r\n      this.error_msg=\"Choose a Batsman\"\r\n      \r\n    }\r\n\r\n    else if(bowler_code_name==undefined){\r\n      this.error_msg=\"Choose a Bowler\"\r\n      \r\n    }\r\n\r\n    else if(batsman_code_name==bowler_code_name){\r\n      this.error_msg=\"Batsman and Bowler cannot be same\"\r\n      \r\n    }\r\n    else{\r\n    this.router.navigate(['/batsvsbowldetails',batsman_code_name,bowler_code_name]);\r\n\r\n    }\r\n  }\r\n}\r\n","<div class=\"main-container\">\r\n<div class=\"form-container\">\r\n<form style=\"text-align: center;align-items: center;\">\r\n    <mat-form-field  appearance=\"outline\">\r\n      <mat-label>Batsman</mat-label>\r\n      <input type=\"text\"\r\n             placeholder=\"Search Batsman\"\r\n             aria-label=\"Batsman\"\r\n             matInput\r\n             [formControl]=\"myControl1\"\r\n             [matAutocomplete]=\"auto1\">\r\n      <mat-autocomplete #auto1=\"matAutocomplete\">\r\n        <mat-option *ngFor=\"let option of filteredOptions1 | async\" [value]=\"option\">\r\n          {{option}}\r\n        </mat-option>\r\n      </mat-autocomplete>\r\n    </mat-form-field>\r\n    <br>\r\n    <mat-form-field  appearance=\"outline\">\r\n      <mat-label>Bowler</mat-label>\r\n      <input type=\"text\"\r\n             placeholder=\"Search Bowler\"\r\n             aria-label=\"Bowler\"\r\n             matInput\r\n             [formControl]=\"myControl2\"\r\n             [matAutocomplete]=\"auto2\">\r\n      <mat-autocomplete #auto2=\"matAutocomplete\">\r\n        <mat-option *ngFor=\"let option2 of filteredOptions2 | async\" [value]=\"option2\">\r\n          {{option2}}\r\n        </mat-option>\r\n      </mat-autocomplete>\r\n    </mat-form-field>\r\n    <br>\r\n    <div *ngIf=\"error_msg!=undefined\" class=\"error-msg\">{{error_msg}}</div>\r\n    <br>\r\n    <button  mat-flat-button color=\"primary\" (click)=\"ButtonClick()\">Get Data</button>\r\n\r\n  </form>\r\n\r\n</div>\r\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}