{"ast":null,"code":"import _asyncToGenerator from \"/home/bharath/Desktop/drive2/tally-hackathon/url-shortner/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { getAuth } from 'firebase/auth';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nimport * as i2 from \"@angular/common/http\";\nexport class FirebaseAuthService {\n  constructor(firebaseAuth, _http) {\n    this.firebaseAuth = firebaseAuth;\n    this._http = _http;\n    this.isLoggedIn = false;\n  }\n\n  signin(email, password) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.firebaseAuth.signInWithEmailAndPassword(email, password).then(res => {\n        console.log(res);\n        _this.isLoggedIn = true;\n        localStorage.setItem('user', JSON.stringify(res.user));\n      });\n    })();\n  }\n\n  signup(email, password, first_name, last_name) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      var error_msg = \"\";\n      yield _this2.firebaseAuth.createUserWithEmailAndPassword(email, password).then(res => {\n        _this2.isLoggedIn = true;\n        localStorage.setItem('user', JSON.stringify(res.user));\n        const auth = getAuth();\n        const user = auth.currentUser;\n        var uid = user === null || user === void 0 ? void 0 : user.uid;\n        console.log(uid);\n\n        _this2._http.put(\"https://url-shortner-418d4-default-rtdb.asia-southeast1.firebasedatabase.app/users/\" + uid + \".json\", {\n          \"first_name\": first_name,\n          \"last name\": last_name\n        }).subscribe(data => {});\n      }).catch(e => {\n        var e_str = e.toString();\n\n        if (e_str.search(\"email-already-in-use\") != -1) {\n          error_msg = \"User already exists\";\n        } else if (e_str.search(\"invalid-email\") != -1) {\n          error_msg = \"Invalid Email\";\n        } else if (e_str.search(\"weak-password\") != -1) {\n          error_msg = \"Weak Password\";\n        }\n\n        return error_msg;\n      });\n      return error_msg;\n    })();\n  }\n\n  logout() {\n    this.firebaseAuth.signOut();\n    localStorage.removeItem('user');\n  }\n\n}\n\nFirebaseAuthService.ɵfac = function FirebaseAuthService_Factory(t) {\n  return new (t || FirebaseAuthService)(i0.ɵɵinject(i1.AngularFireAuth), i0.ɵɵinject(i2.HttpClient));\n};\n\nFirebaseAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FirebaseAuthService,\n  factory: FirebaseAuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/home/bharath/Desktop/drive2/tally-hackathon/url-shortner/src/app/services/firebase-auth.service.ts"],"names":["getAuth","i0","i1","i2","FirebaseAuthService","constructor","firebaseAuth","_http","isLoggedIn","signin","email","password","signInWithEmailAndPassword","then","res","console","log","localStorage","setItem","JSON","stringify","user","signup","first_name","last_name","error_msg","createUserWithEmailAndPassword","auth","currentUser","uid","put","subscribe","data","catch","e","e_str","toString","search","logout","signOut","removeItem","ɵfac","FirebaseAuthService_Factory","t","ɵɵinject","AngularFireAuth","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import { getAuth } from 'firebase/auth';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nimport * as i2 from \"@angular/common/http\";\nexport class FirebaseAuthService {\n    constructor(firebaseAuth, _http) {\n        this.firebaseAuth = firebaseAuth;\n        this._http = _http;\n        this.isLoggedIn = false;\n    }\n    async signin(email, password) {\n        await this.firebaseAuth.signInWithEmailAndPassword(email, password).then(res => {\n            console.log(res);\n            this.isLoggedIn = true;\n            localStorage.setItem('user', JSON.stringify(res.user));\n        });\n    }\n    async signup(email, password, first_name, last_name) {\n        var error_msg = \"\";\n        await this.firebaseAuth.createUserWithEmailAndPassword(email, password).then(res => {\n            this.isLoggedIn = true;\n            localStorage.setItem('user', JSON.stringify(res.user));\n            const auth = getAuth();\n            const user = auth.currentUser;\n            var uid = user === null || user === void 0 ? void 0 : user.uid;\n            console.log(uid);\n            this._http.put(\"https://url-shortner-418d4-default-rtdb.asia-southeast1.firebasedatabase.app/users/\" + uid + \".json\", { \"first_name\": first_name, \"last name\": last_name }).subscribe(data => {\n            });\n        }).catch(e => {\n            var e_str = e.toString();\n            if (e_str.search(\"email-already-in-use\") != -1) {\n                error_msg = \"User already exists\";\n            }\n            else if (e_str.search(\"invalid-email\") != -1) {\n                error_msg = \"Invalid Email\";\n            }\n            else if (e_str.search(\"weak-password\") != -1) {\n                error_msg = \"Weak Password\";\n            }\n            return error_msg;\n        });\n        return error_msg;\n    }\n    logout() {\n        this.firebaseAuth.signOut();\n        localStorage.removeItem('user');\n    }\n}\nFirebaseAuthService.ɵfac = function FirebaseAuthService_Factory(t) { return new (t || FirebaseAuthService)(i0.ɵɵinject(i1.AngularFireAuth), i0.ɵɵinject(i2.HttpClient)); };\nFirebaseAuthService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: FirebaseAuthService, factory: FirebaseAuthService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}