{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/players.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/autocomplete\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/core\";\n\nfunction BowlVsTeamSearchComponent_mat_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r5, \" \");\n  }\n}\n\nfunction BowlVsTeamSearchComponent_mat_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option2_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option2_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option2_r6, \" \");\n  }\n}\n\nfunction BowlVsTeamSearchComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.error_msg);\n  }\n}\n\nexport class BowlVsTeamSearchComponent {\n  constructor(_playerService, router) {\n    this._playerService = _playerService;\n    this.router = router;\n    this.myControl1 = new FormControl();\n    this.myControl2 = new FormControl();\n    this.pop_name_map = new Map();\n    this.players = [];\n    this.popular_player_names = [];\n    this.teams = [];\n    this.team_names = [];\n  }\n\n  ngOnInit() {\n    this._playerService.getPlayerPopNames().subscribe(data => {\n      this.players = data;\n\n      for (var i of this.players) {\n        this.popular_player_names.push(i.popular_name);\n        this.pop_name_map.set(i.popular_name, i.name);\n      }\n    });\n\n    this._playerService.getTeamNames().subscribe(data => {\n      this.teams = data;\n\n      for (var i of this.teams) {\n        this.team_names.push(i);\n      }\n    });\n\n    this.filteredOptions1 = this.myControl1.valueChanges.pipe(startWith(''), map(value1 => this._filterbats(value1)));\n    this.filteredOptions2 = this.myControl2.valueChanges.pipe(startWith(''), map(value2 => this._filterteams(value2)));\n  }\n\n  _filterbats(value) {\n    const filterValue = value.toLowerCase();\n    return this.popular_player_names.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n  _filterteams(value) {\n    const filterValue = value.toLowerCase();\n    return this.team_names.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n  ButtonClick() {\n    var bowler = this.myControl1.value;\n    var team = this.myControl2.value;\n    var bowler_code_name = this.pop_name_map.get(bowler);\n\n    if (bowler_code_name == undefined) {\n      this.error_msg = \"Choose a bowler\";\n      return;\n    }\n\n    if (team == undefined) {\n      this.error_msg = \"Choose a team\";\n      return;\n    }\n\n    this.router.navigate(['/batsvsbowldetails', bowler_code_name, team]);\n  }\n\n}\n\nBowlVsTeamSearchComponent.ɵfac = function BowlVsTeamSearchComponent_Factory(t) {\n  return new (t || BowlVsTeamSearchComponent)(i0.ɵɵdirectiveInject(i1.PlayersService), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nBowlVsTeamSearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BowlVsTeamSearchComponent,\n  selectors: [[\"app-bowl-vs-team-search\"]],\n  decls: 22,\n  vars: 11,\n  consts: [[1, \"main-container\"], [\"appearance\", \"outline\"], [\"type\", \"text\", \"placeholder\", \"Search Batsman\", \"aria-label\", \"Bowler\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\"], [\"auto1\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"placeholder\", \"Search Team\", \"aria-label\", \"Team\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\"], [\"auto2\", \"matAutocomplete\"], [4, \"ngIf\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", 3, \"click\"], [3, \"value\"]],\n  template: function BowlVsTeamSearchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"form\");\n      i0.ɵɵelementStart(2, \"mat-form-field\", 1);\n      i0.ɵɵelementStart(3, \"mat-label\");\n      i0.ɵɵtext(4, \"Bowler\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 2);\n      i0.ɵɵelementStart(6, \"mat-autocomplete\", null, 3);\n      i0.ɵɵtemplate(8, BowlVsTeamSearchComponent_mat_option_8_Template, 2, 2, \"mat-option\", 4);\n      i0.ɵɵpipe(9, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"form\");\n      i0.ɵɵelementStart(11, \"mat-form-field\", 1);\n      i0.ɵɵelementStart(12, \"mat-label\");\n      i0.ɵɵtext(13, \"Team\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 5);\n      i0.ɵɵelementStart(15, \"mat-autocomplete\", null, 6);\n      i0.ɵɵtemplate(17, BowlVsTeamSearchComponent_mat_option_17_Template, 2, 2, \"mat-option\", 4);\n      i0.ɵɵpipe(18, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(19, BowlVsTeamSearchComponent_div_19_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementStart(20, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function BowlVsTeamSearchComponent_Template_button_click_20_listener() {\n        return ctx.ButtonClick();\n      });\n      i0.ɵɵtext(21, \"Get Data\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(7);\n\n      const _r2 = i0.ɵɵreference(16);\n\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formControl\", ctx.myControl1)(\"matAutocomplete\", _r0);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(9, 7, ctx.filteredOptions1));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formControl\", ctx.myControl2)(\"matAutocomplete\", _r2);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(18, 9, ctx.filteredOptions2));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.error_msg != undefined);\n    }\n  },\n  directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i4.MatFormField, i4.MatLabel, i5.MatInput, i3.DefaultValueAccessor, i6.MatAutocompleteTrigger, i3.NgControlStatus, i3.FormControlDirective, i6.MatAutocomplete, i7.NgForOf, i7.NgIf, i8.MatButton, i9.MatOption],\n  pipes: [i7.AsyncPipe],\n  styles: [\".main-container[_ngcontent-%COMP%] {\\n  margin-top: 100px;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJvd2wtdnMtdGVhbS1zZWFyY2guY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0k7RUFDSSxpQkFBQTtFQUNBLGtCQUFBO0FBQVIiLCJmaWxlIjoiYm93bC12cy10ZWFtLXNlYXJjaC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYWlue1xuICAgICYtY29udGFpbmVye1xuICAgICAgICBtYXJnaW4tdG9wOiAxMDBweDtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIH1cbn0iXX0= */\"]\n});","map":{"version":3,"sources":["/home/bharath/Desktop/drive2/CricketStats_website/iplversus2/src/app/components/bowl-vs-team-search/bowl-vs-team-search.component.ts","/home/bharath/Desktop/drive2/CricketStats_website/iplversus2/src/app/components/bowl-vs-team-search/bowl-vs-team-search.component.html"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n \nimport { Component, OnInit } from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {Observable, of} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\nimport { PlayerPopName } from 'src/app/player_pop_names';\nimport { PlayersService } from 'src/app/services/players.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-bowl-vs-team-search',\n  templateUrl: './bowl-vs-team-search.component.html',\n  styleUrls: ['./bowl-vs-team-search.component.scss']\n})\n\nexport class BowlVsTeamSearchComponent implements OnInit {\n  constructor(private _playerService:PlayersService,private router:Router){}\n\n  myControl1:any = new FormControl();\n  myControl2:any = new FormControl();\n\n  pop_name_map=new Map();\n\n  public players:PlayerPopName[]=[];\n  public popular_player_names:string[]=[];\n  public teams:String[]=[];\n  public team_names:String[]=[];\n  \n  filteredOptions1!: Observable<string[]> ;\n  filteredOptions2!: Observable<string[]> ;\n  error_msg!:string;\n\n  ngOnInit() {\n\n    this._playerService.getPlayerPopNames().subscribe(data=>{\n      this.players = data;\n      for(var i of this.players)\n      {\n        this.popular_player_names.push(i.popular_name);\n        this.pop_name_map.set(i.popular_name,i.name);\n      }\n    });\n\n    this._playerService.getTeamNames().subscribe(data=>{\n      this.teams = data;\n      for(var i of this.teams){\n        this.team_names.push(i);\n      }\n    });\n\n    this.filteredOptions1 = this.myControl1.valueChanges\n      .pipe(\n        startWith(''),\n        map(value1 => this._filterbats(<string>value1))\n      );\n    this.filteredOptions2 = this.myControl2.valueChanges\n      .pipe(\n        startWith(''),\n        map(value2 => this._filterteams(<string>value2))\n      );\n  }\n  \n  \n  private _filterbats(value: string): String[] {\n    const filterValue = value.toLowerCase();  \n    return this.popular_player_names.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n  private _filterteams(value: string): String[] {\n    const filterValue = value.toLowerCase();\n    return this.team_names.filter(option => option.toLowerCase().includes(filterValue));\n  }\n  \n  ButtonClick(){\n    \n    var bowler=this.myControl1.value;\n    var team=this.myControl2.value;\n    var bowler_code_name=this.pop_name_map.get(bowler)\n\n    \n    if(bowler_code_name==undefined){\n      this.error_msg=\"Choose a bowler\"\n      return\n    }\n\n    if(team==undefined){\n      this.error_msg=\"Choose a team\"\n      return\n    }\n\n    this.router.navigate(['/batsvsbowldetails',bowler_code_name,team]);\n  }\n}","<div class=\"main-container\">\n    <form>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Bowler</mat-label>\n            <input type=\"text\" placeholder=\"Search Batsman\" aria-label=\"Bowler\" matInput [formControl]=\"myControl1\"\n                [matAutocomplete]=\"auto1\">\n            <mat-autocomplete #auto1=\"matAutocomplete\">\n                <mat-option *ngFor=\"let option of filteredOptions1 | async\" [value]=\"option\">\n                    {{option}}\n                </mat-option>\n            </mat-autocomplete>\n        </mat-form-field>\n    </form>\n\n    <form>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Team</mat-label>\n            <input type=\"text\" placeholder=\"Search Team\" aria-label=\"Team\" matInput [formControl]=\"myControl2\"\n                [matAutocomplete]=\"auto2\">\n            <mat-autocomplete #auto2=\"matAutocomplete\">\n                <mat-option *ngFor=\"let option2 of filteredOptions2 | async\" [value]=\"option2\">\n                    {{option2}}\n                </mat-option>\n            </mat-autocomplete>\n        </mat-form-field>\n    </form>\n    <div *ngIf=\"error_msg!=undefined\">{{error_msg}}</div>\n\n    <button mat-flat-button color=\"primary\" (click)=\"ButtonClick()\">Get Data</button>\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}