{"ast":null,"code":"import _asyncToGenerator from \"/home/bharath/Desktop/drive2/tally-hackathon/url-shortner/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { formatDate } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RedirectionService {\n  // public GEOCODEAPIKEY=\"AIzaSyB_CpzSbB7UHl1lTC7bp1Mui8mwkjbBgU0\"\n  constructor(http) {\n    this.http = http;\n  } // async get_addr(lat:number,long:number){\n  //   return await this.http.get(\"https://maps.googleapis.com/maps/api/geocode/json?latlng=44.4647452,7.3553838&key=\"+this.GEOCODEAPIKEY).toPromise()\n  // }\n\n\n  viewLink(short_url) {\n    return this.http.get(\"https://url-shortner-418d4-default-rtdb.asia-southeast1.firebasedatabase.app/shortened_urls/\" + short_url + \"/fullink.json\").toPromise();\n  }\n\n  getHisLinks(userId) {\n    return this.http.get(\"https://url-shortner-418d4-default-rtdb.asia-southeast1.firebasedatabase.app/users/\" + userId + \"/links.json\");\n  }\n\n  regLog(short_url, logs1) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var ip = yield _this.http.get(\"http://api.ipify.org/?format=json\").toPromise();\n      var today = new Date();\n      var location_data = yield _this.http.get(\"https://ipapi.co/\" + ip.ip + \"/json/\").toPromise();\n      logs1.city = location_data.city;\n      logs1.country = location_data.country_name;\n      logs1.state = location_data.region;\n      logs1.latitude = location_data.latitude;\n      logs1.longitude = location_data.longitude;\n      logs1.date = formatDate(today, 'dd-MM-yyyy hh:mm:ss a', 'en-US', '+0000');\n      var arr = [];\n      var newLog = logs1;\n      var data = yield _this.http.get(\"https://url-shortner-418d4-default-rtdb.asia-southeast1.firebasedatabase.app/shortened_urls/\" + short_url + \"/logs.json\").toPromise();\n\n      if (data != null) {\n        arr = data;\n      }\n\n      arr.push(newLog);\n      return yield _this.addLog1(short_url, arr);\n    })();\n  }\n\n  addLog1(short_url, arr) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      return yield _this2.http.put(\"https://url-shortner-418d4-default-rtdb.asia-southeast1.firebasedatabase.app/shortened_urls/\" + short_url + \"/logs.json\", arr).toPromise();\n    })();\n  }\n\n}\n\nRedirectionService.ɵfac = function RedirectionService_Factory(t) {\n  return new (t || RedirectionService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nRedirectionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RedirectionService,\n  factory: RedirectionService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/home/bharath/Desktop/drive2/tally-hackathon/url-shortner/src/app/services/redirection.service.ts"],"names":["formatDate","i0","i1","RedirectionService","constructor","http","viewLink","short_url","get","toPromise","getHisLinks","userId","regLog","logs1","ip","today","Date","location_data","city","country","country_name","state","region","latitude","longitude","date","arr","newLog","data","push","addLog1","put","ɵfac","RedirectionService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,UAAT,QAA2B,iBAA3B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,kBAAN,CAAyB;AAC5B;AACAC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACH,GAJ2B,CAK5B;AACA;AACA;;;AACAC,EAAAA,QAAQ,CAACC,SAAD,EAAY;AAChB,WAAO,KAAKF,IAAL,CAAUG,GAAV,CAAc,iGAAiGD,SAAjG,GAA6G,eAA3H,EAA4IE,SAA5I,EAAP;AACH;;AACDC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAChB,WAAO,KAAKN,IAAL,CAAUG,GAAV,CAAc,wFAAwFG,MAAxF,GAAiG,aAA/G,CAAP;AACH;;AACKC,EAAAA,MAAM,CAACL,SAAD,EAAYM,KAAZ,EAAmB;AAAA;;AAAA;AAC3B,UAAIC,EAAE,SAAS,KAAI,CAACT,IAAL,CAAUG,GAAV,CAAc,mCAAd,EAAmDC,SAAnD,EAAf;AACA,UAAIM,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,UAAIC,aAAa,SAAS,KAAI,CAACZ,IAAL,CAAUG,GAAV,CAAc,sBAAsBM,EAAE,CAACA,EAAzB,GAA8B,QAA5C,EAAsDL,SAAtD,EAA1B;AACAI,MAAAA,KAAK,CAACK,IAAN,GAAaD,aAAa,CAACC,IAA3B;AACAL,MAAAA,KAAK,CAACM,OAAN,GAAgBF,aAAa,CAACG,YAA9B;AACAP,MAAAA,KAAK,CAACQ,KAAN,GAAcJ,aAAa,CAACK,MAA5B;AACAT,MAAAA,KAAK,CAACU,QAAN,GAAiBN,aAAa,CAACM,QAA/B;AACAV,MAAAA,KAAK,CAACW,SAAN,GAAkBP,aAAa,CAACO,SAAhC;AACAX,MAAAA,KAAK,CAACY,IAAN,GAAazB,UAAU,CAACe,KAAD,EAAQ,uBAAR,EAAiC,OAAjC,EAA0C,OAA1C,CAAvB;AACA,UAAIW,GAAG,GAAG,EAAV;AACA,UAAIC,MAAM,GAAGd,KAAb;AACA,UAAIe,IAAI,SAAS,KAAI,CAACvB,IAAL,CAAUG,GAAV,CAAc,iGAAiGD,SAAjG,GAA6G,YAA3H,EACZE,SADY,EAAjB;;AAEA,UAAImB,IAAI,IAAI,IAAZ,EAAkB;AACdF,QAAAA,GAAG,GAAGE,IAAN;AACH;;AACDF,MAAAA,GAAG,CAACG,IAAJ,CAASF,MAAT;AACA,mBAAa,KAAI,CAACG,OAAL,CAAavB,SAAb,EAAwBmB,GAAxB,CAAb;AAlB2B;AAmB9B;;AACKI,EAAAA,OAAO,CAACvB,SAAD,EAAYmB,GAAZ,EAAiB;AAAA;;AAAA;AAC1B,mBAAa,MAAI,CAACrB,IAAL,CAAU0B,GAAV,CAAc,iGAAiGxB,SAAjG,GAA6G,YAA3H,EAAyImB,GAAzI,EAA8IjB,SAA9I,EAAb;AAD0B;AAE7B;;AApC2B;;AAsChCN,kBAAkB,CAAC6B,IAAnB,GAA0B,SAASC,0BAAT,CAAoCC,CAApC,EAAuC;AAAE,SAAO,KAAKA,CAAC,IAAI/B,kBAAV,EAA8BF,EAAE,CAACkC,QAAH,CAAYjC,EAAE,CAACkC,UAAf,CAA9B,CAAP;AAAmE,CAAtI;;AACAjC,kBAAkB,CAACkC,KAAnB,GAA2B,aAAcpC,EAAE,CAACqC,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEpC,kBAAT;AAA6BqC,EAAAA,OAAO,EAAErC,kBAAkB,CAAC6B,IAAzD;AAA+DS,EAAAA,UAAU,EAAE;AAA3E,CAAtB,CAAzC","sourcesContent":["import { formatDate } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RedirectionService {\n    // public GEOCODEAPIKEY=\"AIzaSyB_CpzSbB7UHl1lTC7bp1Mui8mwkjbBgU0\"\n    constructor(http) {\n        this.http = http;\n    }\n    // async get_addr(lat:number,long:number){\n    //   return await this.http.get(\"https://maps.googleapis.com/maps/api/geocode/json?latlng=44.4647452,7.3553838&key=\"+this.GEOCODEAPIKEY).toPromise()\n    // }\n    viewLink(short_url) {\n        return this.http.get(\"https://url-shortner-418d4-default-rtdb.asia-southeast1.firebasedatabase.app/shortened_urls/\" + short_url + \"/fullink.json\").toPromise();\n    }\n    getHisLinks(userId) {\n        return this.http.get(\"https://url-shortner-418d4-default-rtdb.asia-southeast1.firebasedatabase.app/users/\" + userId + \"/links.json\");\n    }\n    async regLog(short_url, logs1) {\n        var ip = await this.http.get(\"http://api.ipify.org/?format=json\").toPromise();\n        var today = new Date();\n        var location_data = await this.http.get(\"https://ipapi.co/\" + ip.ip + \"/json/\").toPromise();\n        logs1.city = location_data.city;\n        logs1.country = location_data.country_name;\n        logs1.state = location_data.region;\n        logs1.latitude = location_data.latitude;\n        logs1.longitude = location_data.longitude;\n        logs1.date = formatDate(today, 'dd-MM-yyyy hh:mm:ss a', 'en-US', '+0000');\n        var arr = [];\n        var newLog = logs1;\n        var data = await this.http.get(\"https://url-shortner-418d4-default-rtdb.asia-southeast1.firebasedatabase.app/shortened_urls/\" + short_url + \"/logs.json\")\n            .toPromise();\n        if (data != null) {\n            arr = data;\n        }\n        arr.push(newLog);\n        return await this.addLog1(short_url, arr);\n    }\n    async addLog1(short_url, arr) {\n        return await this.http.put(\"https://url-shortner-418d4-default-rtdb.asia-southeast1.firebasedatabase.app/shortened_urls/\" + short_url + \"/logs.json\", arr).toPromise();\n    }\n}\nRedirectionService.ɵfac = function RedirectionService_Factory(t) { return new (t || RedirectionService)(i0.ɵɵinject(i1.HttpClient)); };\nRedirectionService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: RedirectionService, factory: RedirectionService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}