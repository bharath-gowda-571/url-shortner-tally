{"ast":null,"code":"import _asyncToGenerator from \"D:/Angular projects/iplversus_website/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/players.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"ng2-charts\";\n\nfunction BatsVsTeamDetailsComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵelement(1, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction BatsVsTeamDetailsComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r1.batsman, \" has never batted against \", ctx_r1.team, \"\");\n  }\n}\n\nfunction BatsVsTeamDetailsComponent_div_21_span_66_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"*\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction BatsVsTeamDetailsComponent_div_21_div_102_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelement(1, \"canvas\", 24);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"datasets\", ctx_r6.lineChart1Data)(\"labels\", ctx_r6.lineChartLabels1)(\"options\", ctx_r6.lineChart1Options)(\"plugins\", ctx_r6.lineChart1Plugins)(\"legend\", ctx_r6.lineChart1Legend)(\"chartType\", ctx_r6.lineChart1Type);\n  }\n}\n\nfunction BatsVsTeamDetailsComponent_div_21_div_103_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵelementStart(2, \"td\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\", 15);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"tr\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const year_r11 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(year_r11);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r10.data_each_year[year_r11].bat_avg);\n  }\n}\n\nfunction BatsVsTeamDetailsComponent_div_21_div_103_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"table\", 13);\n    i0.ɵɵtemplate(2, BatsVsTeamDetailsComponent_div_21_div_103_div_2_Template, 7, 2, \"div\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r7.lineChartLabels);\n  }\n}\n\nfunction BatsVsTeamDetailsComponent_div_21_div_115_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelement(1, \"canvas\", 24);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"datasets\", ctx_r8.lineChart2Data)(\"labels\", ctx_r8.lineChartLabels)(\"options\", ctx_r8.lineChart2Options)(\"plugins\", ctx_r8.lineChart2Plugins)(\"legend\", ctx_r8.lineChart2Legend)(\"chartType\", ctx_r8.lineChart2Type);\n  }\n}\n\nfunction BatsVsTeamDetailsComponent_div_21_div_116_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵelementStart(2, \"td\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\", 15);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"tr\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const year_r14 = ctx.$implicit;\n    const ctx_r13 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(year_r14);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r13.data_each_year[year_r14].strike_rate);\n  }\n}\n\nfunction BatsVsTeamDetailsComponent_div_21_div_116_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"table\", 13);\n    i0.ɵɵtemplate(2, BatsVsTeamDetailsComponent_div_21_div_116_div_2_Template, 7, 2, \"div\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r9.lineChartLabels);\n  }\n}\n\nfunction BatsVsTeamDetailsComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵelementStart(1, \"div\", 12);\n    i0.ɵɵelementStart(2, \"h2\");\n    i0.ɵɵtext(3, \"All Data\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"table\", 13);\n    i0.ɵɵelementStart(5, \"tr\");\n    i0.ɵɵelementStart(6, \"td\", 14);\n    i0.ɵɵtext(7, \"Innings\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\", 15);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"tr\", 16);\n    i0.ɵɵelementStart(11, \"tr\");\n    i0.ɵɵelementStart(12, \"td\", 14);\n    i0.ɵɵtext(13, \"Runs\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\", 15);\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"tr\", 16);\n    i0.ɵɵelementStart(17, \"tr\");\n    i0.ɵɵelementStart(18, \"td\", 14);\n    i0.ɵɵtext(19, \"Balls\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"td\", 15);\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(22, \"tr\", 16);\n    i0.ɵɵelementStart(23, \"tr\");\n    i0.ɵɵelementStart(24, \"td\", 14);\n    i0.ɵɵtext(25, \"Avg Strike Rate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"td\", 15);\n    i0.ɵɵtext(27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(28, \"tr\", 16);\n    i0.ɵɵelementStart(29, \"tr\");\n    i0.ɵɵelementStart(30, \"td\", 14);\n    i0.ɵɵtext(31, \"Batting Average\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"td\", 15);\n    i0.ɵɵtext(33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(34, \"tr\", 16);\n    i0.ɵɵelementStart(35, \"tr\");\n    i0.ɵɵelementStart(36, \"td\", 14);\n    i0.ɵɵtext(37, \"Dismissals\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"td\", 15);\n    i0.ɵɵtext(39);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(40, \"tr\", 16);\n    i0.ɵɵelementStart(41, \"tr\");\n    i0.ɵɵelementStart(42, \"td\", 14);\n    i0.ɵɵtext(43, \"Sixes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(44, \"td\", 15);\n    i0.ɵɵtext(45);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(46, \"tr\", 16);\n    i0.ɵɵelementStart(47, \"tr\");\n    i0.ɵɵelementStart(48, \"td\", 14);\n    i0.ɵɵtext(49, \"Fours\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(50, \"td\", 15);\n    i0.ɵɵtext(51);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(52, \"tr\", 16);\n    i0.ɵɵelementStart(53, \"tr\");\n    i0.ɵɵelementStart(54, \"td\", 14);\n    i0.ɵɵtext(55, \"Batting Positions\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(56, \"td\", 15);\n    i0.ɵɵtext(57);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(58, \"tr\", 16);\n    i0.ɵɵelementStart(59, \"tr\");\n    i0.ɵɵelementStart(60, \"td\", 14);\n    i0.ɵɵtext(61, \"Highest Score\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(62, \"td\", 15);\n    i0.ɵɵtext(63);\n    i0.ɵɵelementStart(64, \"span\");\n    i0.ɵɵtext(65);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(66, BatsVsTeamDetailsComponent_div_21_span_66_Template, 2, 0, \"span\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(67, \"tr\", 16);\n    i0.ɵɵelementStart(68, \"tr\");\n    i0.ɵɵelementStart(69, \"td\", 14);\n    i0.ɵɵtext(70, \"Ducks\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(71, \"td\", 15);\n    i0.ɵɵtext(72);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(73, \"tr\", 16);\n    i0.ɵɵelementStart(74, \"tr\");\n    i0.ɵɵelementStart(75, \"td\", 14);\n    i0.ɵɵtext(76, \"30s\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(77, \"td\", 15);\n    i0.ɵɵtext(78);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(79, \"tr\", 16);\n    i0.ɵɵelementStart(80, \"tr\");\n    i0.ɵɵelementStart(81, \"td\", 14);\n    i0.ɵɵtext(82, \"50s\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(83, \"td\", 15);\n    i0.ɵɵtext(84);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(85, \"tr\", 16);\n    i0.ɵɵelementStart(86, \"tr\");\n    i0.ɵɵelementStart(87, \"td\", 14);\n    i0.ɵɵtext(88, \"100s\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(89, \"td\", 15);\n    i0.ɵɵtext(90);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(91, \"div\", 12);\n    i0.ɵɵelementStart(92, \"h2\");\n    i0.ɵɵtext(93, \"Batting Average Over the Years\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(94, \"ul\", 17);\n    i0.ɵɵelementStart(95, \"li\", 18);\n    i0.ɵɵelementStart(96, \"a\", 19);\n    i0.ɵɵlistener(\"click\", function BatsVsTeamDetailsComponent_div_21_Template_a_click_96_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.changeChartOrData1(\"chart\");\n    });\n    i0.ɵɵtext(97, \"Chart\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(98, \"li\", 18);\n    i0.ɵɵelementStart(99, \"a\", 20);\n    i0.ɵɵlistener(\"click\", function BatsVsTeamDetailsComponent_div_21_Template_a_click_99_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return ctx_r18.changeChartOrData1(\"data\");\n    });\n    i0.ɵɵtext(100, \"Data\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(101, \"div\", 21);\n    i0.ɵɵtemplate(102, BatsVsTeamDetailsComponent_div_21_div_102_Template, 2, 6, \"div\", 22);\n    i0.ɵɵtemplate(103, BatsVsTeamDetailsComponent_div_21_div_103_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(104, \"div\", 12);\n    i0.ɵɵelementStart(105, \"h2\");\n    i0.ɵɵtext(106, \"Strike Rate Over the Years\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(107, \"ul\", 17);\n    i0.ɵɵelementStart(108, \"li\", 18);\n    i0.ɵɵelementStart(109, \"a\", 19);\n    i0.ɵɵlistener(\"click\", function BatsVsTeamDetailsComponent_div_21_Template_a_click_109_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.changeChartOrData2(\"chart\");\n    });\n    i0.ɵɵtext(110, \"Chart\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(111, \"li\", 18);\n    i0.ɵɵelementStart(112, \"a\", 20);\n    i0.ɵɵlistener(\"click\", function BatsVsTeamDetailsComponent_div_21_Template_a_click_112_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.changeChartOrData2(\"data\");\n    });\n    i0.ɵɵtext(113, \"Data\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(114, \"div\", 21);\n    i0.ɵɵtemplate(115, BatsVsTeamDetailsComponent_div_21_div_115_Template, 2, 6, \"div\", 22);\n    i0.ɵɵtemplate(116, BatsVsTeamDetailsComponent_div_21_div_116_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate(ctx_r2.innings);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r2.runs);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r2.balls);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r2.strike_rate);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r2.bat_avg);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r2.dissmissals);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r2.sixes);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r2.fours);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r2.bat_pos.join(\",\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.h_score[\"score\"], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"(\", ctx_r2.h_score[\"balls\"], \")\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.h_score[\"status\"] != \"out\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r2.ducks);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r2.thirties);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r2.fifties);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r2.hundreds);\n    i0.ɵɵadvance(6);\n    i0.ɵɵclassMap(ctx_r2.chartTabClass1);\n    i0.ɵɵadvance(3);\n    i0.ɵɵclassMap(ctx_r2.dataTabClass1);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.chart_or_data1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.chart_or_data1);\n    i0.ɵɵadvance(6);\n    i0.ɵɵclassMap(ctx_r2.chartTabClass2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵclassMap(ctx_r2.dataTabClass2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.chart_or_data2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.chart_or_data2);\n  }\n}\n\nfunction BatsVsTeamDetailsComponent_hr_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"hr\");\n  }\n}\n\nfunction BatsVsTeamDetailsComponent_div_23_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 18);\n    i0.ɵɵelementStart(1, \"a\", 19);\n    i0.ɵɵlistener(\"click\", function BatsVsTeamDetailsComponent_div_23_li_4_Template_a_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r26);\n      const i_r24 = restoredCtx.index;\n      const ctx_r25 = i0.ɵɵnextContext(2);\n      return ctx_r25.switchYear(i_r24);\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const year_r23 = ctx.$implicit;\n    const i_r24 = ctx.index;\n    const ctx_r21 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(ctx_r21.yearTabsStyles[i_r24]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(year_r23);\n  }\n}\n\nfunction BatsVsTeamDetailsComponent_div_23_div_6_div_1_tr_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\", 14);\n    i0.ɵɵtext(2, \"Batting Average\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 15);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const year_r27 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r30 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r30.data_each_year[year_r27].bat_avg);\n  }\n}\n\nfunction BatsVsTeamDetailsComponent_div_23_div_6_div_1_span_60_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"*\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction BatsVsTeamDetailsComponent_div_23_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵelement(1, \"br\");\n    i0.ɵɵelementStart(2, \"table\", 13);\n    i0.ɵɵelementStart(3, \"tr\");\n    i0.ɵɵelementStart(4, \"td\", 14);\n    i0.ɵɵtext(5, \"Innings\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\", 15);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"tr\", 16);\n    i0.ɵɵelementStart(9, \"tr\");\n    i0.ɵɵelementStart(10, \"td\", 14);\n    i0.ɵɵtext(11, \"Runs\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\", 15);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"tr\", 16);\n    i0.ɵɵelementStart(15, \"tr\");\n    i0.ɵɵelementStart(16, \"td\", 14);\n    i0.ɵɵtext(17, \"Balls\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"td\", 15);\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(20, \"tr\", 16);\n    i0.ɵɵelementStart(21, \"tr\");\n    i0.ɵɵelementStart(22, \"td\", 14);\n    i0.ɵɵtext(23, \"Dismissals\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"td\", 15);\n    i0.ɵɵtext(25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(26, \"tr\", 16);\n    i0.ɵɵelementStart(27, \"tr\");\n    i0.ɵɵelementStart(28, \"td\", 14);\n    i0.ɵɵtext(29, \"Strike Rate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"td\", 15);\n    i0.ɵɵtext(31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(32, \"tr\", 16);\n    i0.ɵɵtemplate(33, BatsVsTeamDetailsComponent_div_23_div_6_div_1_tr_33_Template, 5, 1, \"tr\", 7);\n    i0.ɵɵelement(34, \"tr\", 16);\n    i0.ɵɵelementStart(35, \"tr\");\n    i0.ɵɵelementStart(36, \"td\", 14);\n    i0.ɵɵtext(37, \"Fours\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"td\", 15);\n    i0.ɵɵtext(39);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(40, \"tr\", 16);\n    i0.ɵɵelementStart(41, \"tr\");\n    i0.ɵɵelementStart(42, \"td\", 14);\n    i0.ɵɵtext(43, \"Sixes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(44, \"td\", 15);\n    i0.ɵɵtext(45);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(46, \"tr\", 16);\n    i0.ɵɵelementStart(47, \"tr\");\n    i0.ɵɵelementStart(48, \"td\", 14);\n    i0.ɵɵtext(49, \"Batting Positions\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(50, \"td\", 15);\n    i0.ɵɵtext(51);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(52, \"tr\", 16);\n    i0.ɵɵelementStart(53, \"tr\");\n    i0.ɵɵelementStart(54, \"td\", 14);\n    i0.ɵɵtext(55, \"Highest Score\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(56, \"td\", 15);\n    i0.ɵɵtext(57);\n    i0.ɵɵelementStart(58, \"span\");\n    i0.ɵɵtext(59);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(60, BatsVsTeamDetailsComponent_div_23_div_6_div_1_span_60_Template, 2, 0, \"span\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(61, \"tr\", 16);\n    i0.ɵɵelementStart(62, \"tr\");\n    i0.ɵɵelementStart(63, \"td\", 14);\n    i0.ɵɵtext(64, \"Ducks\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(65, \"td\", 15);\n    i0.ɵɵtext(66);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(67, \"tr\", 16);\n    i0.ɵɵelementStart(68, \"tr\");\n    i0.ɵɵelementStart(69, \"td\", 14);\n    i0.ɵɵtext(70, \"30s\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(71, \"td\", 15);\n    i0.ɵɵtext(72);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(73, \"tr\", 16);\n    i0.ɵɵelementStart(74, \"tr\");\n    i0.ɵɵelementStart(75, \"td\", 14);\n    i0.ɵɵtext(76, \"50s\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(77, \"td\", 15);\n    i0.ɵɵtext(78);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(79, \"tr\", 16);\n    i0.ɵɵelementStart(80, \"tr\");\n    i0.ɵɵelementStart(81, \"td\", 14);\n    i0.ɵɵtext(82, \"100s\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(83, \"td\", 15);\n    i0.ɵɵtext(84);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const year_r27 = i0.ɵɵnextContext().$implicit;\n    const ctx_r29 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(ctx_r29.data_each_year[year_r27].matches.length);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r29.data_each_year[year_r27].runs);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r29.data_each_year[year_r27].balls);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r29.data_each_year[year_r27].dissmissals);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r29.data_each_year[year_r27].strike_rate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", true);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r29.data_each_year[year_r27].fours);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r29.data_each_year[year_r27].sixes);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r29.data_each_year[year_r27].bat_pos);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r29.data_each_year[year_r27].h_score[\"score\"], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r29.data_each_year[year_r27].h_score[\"balls\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r29.data_each_year[year_r27].h_score[\"status\"] != \"out\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r29.data_each_year[year_r27].ducks);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r29.data_each_year[year_r27].thirties);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r29.data_each_year[year_r27].fifties);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r29.data_each_year[year_r27].hundreds);\n  }\n}\n\nfunction BatsVsTeamDetailsComponent_div_23_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, BatsVsTeamDetailsComponent_div_23_div_6_div_1_Template, 85, 16, \"div\", 30);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r28 = ctx.index;\n    const ctx_r22 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i_r28 == ctx_r22.currentYearIndex);\n  }\n}\n\nfunction BatsVsTeamDetailsComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"h2\");\n    i0.ɵɵtext(2, \"Data By Year\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\", 17);\n    i0.ɵɵtemplate(4, BatsVsTeamDetailsComponent_div_23_li_4_Template, 3, 3, \"li\", 27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 28);\n    i0.ɵɵtemplate(6, BatsVsTeamDetailsComponent_div_23_div_6_Template, 2, 1, \"div\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.lineChartLabels);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitch\", ctx_r4.currentYearIndex);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.lineChartLabels);\n  }\n}\n\nexport class BatsVsTeamDetailsComponent {\n  constructor(route, _playerService) {\n    this.route = route;\n    this._playerService = _playerService;\n    this.loading = true;\n    this.batVTeamData = [];\n    this.nvr_fcd_off = false;\n    this.data_each_year = {};\n    this.data_by_match = {};\n    this.inngs_arr = [];\n    this.runs = 0;\n    this.fours = 0;\n    this.sixes = 0;\n    this.balls = 0;\n    this.h_score = {\n      score: 0,\n      status: \"out\",\n      balls: 0\n    };\n    this.ducks = 0;\n    this.thirties = 0;\n    this.fifties = 0;\n    this.hundreds = 0;\n    this.innings = 0;\n    this.bat_pos = [];\n    this.dissmissals = 0;\n    this.bat_avg = 0;\n    this.strike_rate = 0;\n    this.sr_chart_data = [];\n    this.ba_chart_data = [];\n    this.lineChartLabels1 = [];\n    this.lineChart1Options = {\n      responsive: true,\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    };\n    this.lineChartLabels = [];\n    this.lineChart1Type = 'line';\n    this.lineChart1Legend = true;\n    this.lineChart1Plugins = [];\n    this.lineChart1Data = [{\n      data: this.ba_chart_data,\n      label: 'Batting Average',\n      backgroundColor: 'rgba(167, 250, 112,0.5)',\n      pointBackgroundColor: 'rgba(0, 0, 1,1)'\n    }];\n    this.chart_or_data1 = true;\n    this.chartTabClass1 = \"nav-link active\";\n    this.dataTabClass1 = \"nav-link\";\n    this.lineChart2Options = {\n      responsive: true,\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    };\n    this.lineChart2Type = 'line';\n    this.lineChart2Legend = true;\n    this.lineChart2Plugins = [];\n    this.lineChart2Data = [{\n      data: this.sr_chart_data,\n      label: 'Strike Rate',\n      backgroundColor: 'rgba(89, 180, 201,0.5)',\n      pointBackgroundColor: 'rgba(0, 0, 1,1)'\n    }];\n    this.chart_or_data2 = true;\n    this.chartTabClass2 = \"nav-link active\";\n    this.dataTabClass2 = \"nav-link\";\n    this.currentYearIndex = 0;\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.batsman = _this.route.snapshot.paramMap.get(\"batsman\");\n      _this.team = _this.route.snapshot.paramMap.get(\"team\");\n      _this.batVTeamData = yield _this._playerService.getBatsmanVsTeamData(_this.batsman, _this.team);\n      _this.loading = false;\n\n      if (_this.batVTeamData == null) {\n        _this.nvr_fcd_off = true;\n        return;\n      }\n\n      for (var data of _this.batVTeamData) {\n        if (_this.data_each_year[data.year] == undefined) {\n          _this.data_each_year[data.year] = {\n            runs: 0,\n            balls: 0,\n            strike_rate: 0,\n            bat_avg: \"player was never out\",\n            matches: [],\n            fours: 0,\n            sixes: 0,\n            dissmissals: 0,\n            h_score: {\n              score: 0,\n              status: \"out\",\n              balls: 0\n            },\n            bat_pos: [],\n            ducks: 0,\n            thirties: 0,\n            fifties: 0,\n            hundreds: 0,\n            status: \"not out\"\n          };\n          _this.lineChartLabels = _this.push_in_sorted_order(_this.lineChartLabels, data.year);\n          _this.lineChartLabels1 = _this.push_in_sorted_order(_this.lineChartLabels1, data.year);\n        } // checking if match id is in data_by_match\n\n\n        if (_this.data_by_match[data.match_id] == undefined) {\n          _this.data_each_year[data.year].matches.push(data.match_id);\n\n          _this.inngs_arr.push(data.match_id);\n\n          _this.data_by_match[data.match_id] = {\n            runs: 0,\n            balls: 0,\n            strike_rate: 0\n          };\n        } //innings\n\n\n        _this.innings++;\n\n        _this.data_each_year[data.year].matches.push(data.match_id); //runs\n\n\n        _this.runs += data.runs;\n        _this.data_each_year[data.year].runs += data.runs;\n\n        if (data.runs > _this.h_score[\"score\"]) {\n          _this.h_score[\"score\"] = data.runs;\n          _this.h_score[\"status\"] = data.status;\n          _this.h_score[\"balls\"] = data.balls;\n        }\n\n        if (data.runs > _this.data_each_year[data.year].h_score[\"score\"]) {\n          _this.data_each_year[data.year].h_score[\"score\"] = data.runs;\n          _this.data_each_year[data.year].h_score[\"status\"] = data.status;\n          _this.data_each_year[data.year].h_score[\"balls\"] = data.balls;\n        }\n\n        if (data.runs == 0) {\n          _this.ducks++;\n          _this.data_each_year[data.year].ducks++;\n        }\n\n        if (data.runs > 100) {\n          _this.hundreds++;\n          _this.data_each_year[data.year].hundreds++;\n        }\n\n        if (data.runs > 50 && data.runs < 100) {\n          _this.fifties++;\n          _this.data_each_year[data.year].fifties++;\n        }\n\n        if (data.runs > 30 && data.runs < 50) {\n          _this.thirties++;\n          _this.data_each_year[data.year].thirties++;\n        } //fours\n\n\n        _this.fours += data.fours;\n        _this.data_each_year[data.year].fours += data.fours; //sixes\n\n        _this.sixes += data.sixes;\n        _this.data_each_year[data.year].sixes += data.sixes; //balls\n\n        _this.balls += data.balls;\n        _this.data_each_year[data.year].balls += data.balls; //batpositions\n\n        !_this.bat_pos.includes(data.position) ? _this.bat_pos.push(data.position) : null;\n        !_this.data_each_year[data.year].bat_pos.includes(data.position) ? _this.data_each_year[data.year].bat_pos.push(data.position) : null; //strikerate\n\n        _this.data_each_year[data.year].strike_rate = (_this.data_each_year[data.year].runs / _this.data_each_year[data.year].balls * 100).toFixed(2); //dismissals\n\n        if (data.status == \"out\") {\n          _this.data_each_year[data.year].status = \"out\";\n          _this.dissmissals++;\n          _this.data_each_year[data.year].dissmissals++;\n        } //batting average\n\n\n        if (_this.data_each_year[data.year].dissmissals != 0) {\n          _this.data_each_year[data.year].bat_avg = (_this.data_each_year[data.year].runs / _this.data_each_year[data.year].dissmissals).toFixed(2);\n        }\n      }\n\n      if (_this.dissmissals != 0) _this.bat_avg = (_this.runs / _this.dissmissals).toFixed(2);else {\n        _this.bat_avg = \"he was never out\";\n      }\n      _this.strike_rate = (_this.runs / _this.balls * 100).toFixed(2);\n\n      _this.bat_avg_problem(_this.lineChartLabels1, 0);\n\n      for (var i of _this.lineChartLabels) _this.sr_chart_data.push(_this.data_each_year[i].strike_rate);\n\n      for (var i of _this.lineChartLabels1) _this.ba_chart_data.push(_this.data_each_year[i].bat_avg); //console.log(this.lineChartLabels1);\n\n\n      _this.yearTabsStyles = Array(_this.lineChartLabels.length).fill(\"nav-link\");\n      _this.yearTabsStyles[0] = \"nav-link active\";\n    })();\n  }\n\n  bat_avg_problem(arr, i) {\n    if (i >= this.lineChartLabels1.length) {\n      return;\n    }\n\n    var year = this.lineChartLabels1[i];\n\n    if (this.data_each_year[year].dissmissals == 0) {\n      this.lineChartLabels1.splice(i, 1);\n      this.bat_avg_problem(this.lineChartLabels1, i);\n    } else this.bat_avg_problem(this.lineChartLabels1, i + 1);\n  }\n\n  push_in_sorted_order(arr, year) {\n    if (arr.length == 0 || year > arr[arr.length - 1]) {\n      arr.push(year);\n      return arr;\n    }\n\n    for (var i = 0; i <= arr.length - 1; i++) {\n      if (arr[i] > year) {\n        arr.splice(i, 0, year);\n        return arr;\n      }\n    }\n\n    return arr;\n  }\n\n  changeChartOrData1(choice) {\n    if (choice == \"chart\") {\n      this.chart_or_data1 = true;\n      this.chartTabClass1 = \"nav-link active\";\n      this.dataTabClass1 = \"nav-link\";\n    } else if (choice == \"data\") {\n      this.chart_or_data1 = false;\n      this.dataTabClass1 = \"nav-link active\";\n      this.chartTabClass1 = \"nav-link\";\n    }\n  }\n\n  changeChartOrData2(choice) {\n    if (choice == \"chart\") {\n      this.chart_or_data2 = true;\n      this.chartTabClass2 = \"nav-link active\";\n      this.dataTabClass2 = \"nav-link\";\n    } else if (choice == \"data\") {\n      this.chart_or_data2 = false;\n      this.dataTabClass2 = \"nav-link active\";\n      this.chartTabClass2 = \"nav-link\";\n    }\n  }\n\n  switchYear(yearIndex) {\n    this.yearTabsStyles[this.currentYearIndex] = \"nav-link\";\n    this.currentYearIndex = yearIndex;\n    this.yearTabsStyles[this.currentYearIndex] = \"nav-link active\";\n  }\n\n}\n\nBatsVsTeamDetailsComponent.ɵfac = function BatsVsTeamDetailsComponent_Factory(t) {\n  return new (t || BatsVsTeamDetailsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.PlayersService));\n};\n\nBatsVsTeamDetailsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BatsVsTeamDetailsComponent,\n  selectors: [[\"app-bats-vs-team-details\"]],\n  decls: 24,\n  vars: 7,\n  consts: [[1, \"main-container\"], [\"src\", \"assets/batting.png\", \"alt\", \"batsman\", 1, \"main-iconimg\"], [1, \"spacer\"], [\"src\", \"assets/team.png\", \"alt\", \"team\", 1, \"main-iconimg\"], [\"class\", \"text-center\", 4, \"ngIf\"], [\"style\", \"text-align: center;;\", 4, \"ngIf\"], [\"class\", \"row\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"text-center\"], [\"role\", \"status\", 1, \"spinner-border\"], [2, \"text-align\", \"center\"], [1, \"row\"], [1, \"col-md-4\"], [1, \"main-stats-table\"], [1, \"main-stats-table-left\"], [1, \"main-stats-table-right\"], [1, \"main-stats-table-spacer\"], [1, \"nav\", \"nav-pills\", \"justify-content-center\"], [1, \"nav-item\"], [\"aria-current\", \"page\", 3, \"click\"], [3, \"click\"], [1, \"strike-rate-over-years\"], [\"class\", \"line-chart\", 4, \"ngIf\"], [1, \"line-chart\"], [\"baseChart\", \"\", 3, \"datasets\", \"labels\", \"options\", \"plugins\", \"legend\", \"chartType\"], [\"style\", \"display: contents;\", 4, \"ngFor\", \"ngForOf\"], [2, \"display\", \"contents\"], [\"class\", \"nav-item\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngSwitch\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"data-by-year\", 4, \"ngIf\"], [1, \"data-by-year\"]],\n  template: function BatsVsTeamDetailsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"span\");\n      i0.ɵɵelement(2, \"img\", 1);\n      i0.ɵɵelementStart(3, \"h2\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"span\", 2);\n      i0.ɵɵelement(6, \"span\", 2);\n      i0.ɵɵelement(7, \"span\", 2);\n      i0.ɵɵelementStart(8, \"span\");\n      i0.ɵɵelementStart(9, \"h1\");\n      i0.ɵɵtext(10, \"Vs\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"span\", 2);\n      i0.ɵɵelement(12, \"span\", 2);\n      i0.ɵɵelement(13, \"span\", 2);\n      i0.ɵɵelementStart(14, \"span\");\n      i0.ɵɵelement(15, \"img\", 3);\n      i0.ɵɵelementStart(16, \"h2\");\n      i0.ɵɵtext(17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"hr\");\n      i0.ɵɵtemplate(19, BatsVsTeamDetailsComponent_div_19_Template, 2, 0, \"div\", 4);\n      i0.ɵɵtemplate(20, BatsVsTeamDetailsComponent_div_20_Template, 2, 2, \"div\", 5);\n      i0.ɵɵtemplate(21, BatsVsTeamDetailsComponent_div_21_Template, 117, 28, \"div\", 6);\n      i0.ɵɵtemplate(22, BatsVsTeamDetailsComponent_hr_22_Template, 1, 0, \"hr\", 7);\n      i0.ɵɵtemplate(23, BatsVsTeamDetailsComponent_div_23_Template, 7, 3, \"div\", 7);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.batsman);\n      i0.ɵɵadvance(13);\n      i0.ɵɵtextInterpolate(ctx.team);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.nvr_fcd_off == true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.nvr_fcd_off && !ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.nvr_fcd_off && !ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.nvr_fcd_off && !ctx.loading);\n    }\n  },\n  directives: [i3.NgIf, i4.BaseChartDirective, i3.NgForOf, i3.NgSwitch],\n  styles: [\".main-container[_ngcontent-%COMP%] {\\n  text-align: center;\\n  height: 100%;\\n  padding: 0;\\n  margin: 0;\\n  margin-top: 30px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n.main-iconimg[_ngcontent-%COMP%] {\\n  height: 100px;\\n  width: 100px;\\n}\\ntable[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\ntd.left[_ngcontent-%COMP%] {\\n  text-align: left;\\n}\\ntd.right[_ngcontent-%COMP%] {\\n  text-align: right;\\n}\\n.pie-chart[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 0;\\n  margin: 0;\\n  display: flex;\\n}\\n.line-chart[_ngcontent-%COMP%] {\\n  width: 100%;\\n  display: block;\\n}\\n.main-stats-table[_ngcontent-%COMP%] {\\n  margin-left: 5%;\\n  width: 90%;\\n  height: 80%;\\n  margin-right: 5%;\\n}\\n.main-stats-table-left[_ngcontent-%COMP%] {\\n  background-color: #dcdcdc;\\n  text-align: left;\\n  padding-left: 10px;\\n  width: 40%;\\n}\\n.main-stats-table-right[_ngcontent-%COMP%] {\\n  background-color: #c4c4c4;\\n  width: 40%;\\n  text-align: center;\\n}\\n.main-stats-table-spacer[_ngcontent-%COMP%] {\\n  height: 2px;\\n}\\n.dissmissal-type[_ngcontent-%COMP%] {\\n  width: 90%;\\n  margin-left: 5%;\\n  margin-right: 5%;\\n  height: 90%;\\n  margin-top: 5%;\\n  margin-bottom: 5%;\\n}\\n.strike-rate-over-years[_ngcontent-%COMP%] {\\n  width: 90%;\\n  margin-left: 5%;\\n  margin-right: 5%;\\n  height: 90%;\\n  margin-top: 5%;\\n}\\n.data-by-year[_ngcontent-%COMP%] {\\n  width: 50%;\\n  margin-left: 2%;\\n}\\n@media only screen and (max-width: 768px) {\\n  .data-by-year[_ngcontent-%COMP%] {\\n    width: 90%;\\n    margin-left: 5%;\\n    margin-right: 5%;\\n    margin-top: 10px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhdHMtdnMtdGVhbS1kZXRhaWxzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQ0ksa0JBQUE7RUFDQSxZQUFBO0VBQ0EsVUFBQTtFQUNBLFNBQUE7RUFDQSxnQkFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHVCQUFBO0FBQVI7QUFFSTtFQUNJLGFBQUE7RUFDQSxZQUFBO0FBQVI7QUFJQTtFQUNJLFdBQUE7QUFESjtBQUdBO0VBQ0ksZ0JBQUE7QUFBSjtBQUVBO0VBQ0ksaUJBQUE7QUFDSjtBQUNBO0VBQ0ksV0FBQTtFQUNBLFVBQUE7RUFDQSxTQUFBO0VBRUEsYUFBQTtBQUNKO0FBQ0E7RUFDSSxXQUFBO0VBRUEsY0FBQTtBQUNKO0FBRUE7RUFDSSxlQUFBO0VBQ0EsVUFBQTtFQUNBLFdBQUE7RUFDQSxnQkFBQTtBQUNKO0FBQ0k7RUFDSSx5QkFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxVQUFBO0FBQ1I7QUFDSTtFQUNJLHlCQUFBO0VBQ0EsVUFBQTtFQUNBLGtCQUFBO0FBQ1I7QUFDSTtFQUNJLFdBQUE7QUFDUjtBQUVBO0VBQ0ksVUFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLFdBQUE7RUFDQSxjQUFBO0VBQ0EsaUJBQUE7QUFDSjtBQUVBO0VBQ0ksVUFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLFdBQUE7RUFDQSxjQUFBO0FBQ0o7QUFDQTtFQUNJLFVBQUE7RUFDQSxlQUFBO0FBRUo7QUFDQTtFQUNJO0lBQ0ksVUFBQTtJQUNBLGVBQUE7SUFDQSxnQkFBQTtJQUNBLGdCQUFBO0VBRU47QUFDRiIsImZpbGUiOiJiYXRzLXZzLXRlYW0tZGV0YWlscy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYWlue1xyXG4gICAgJi1jb250YWluZXJ7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICBwYWRkaW5nOiAwO1xyXG4gICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIH1cclxuICAgICYtaWNvbmltZ3tcclxuICAgICAgICBoZWlnaHQ6IDEwMHB4O1xyXG4gICAgICAgIHdpZHRoOiAxMDBweDtcclxuICAgIH1cclxuICAgIFxyXG59XHJcbnRhYmxle1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxudGQubGVmdHtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbn1cclxudGQucmlnaHR7XHJcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcclxufVxyXG4ucGllLWNoYXJ0e1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgXHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG59XHJcbi5saW5lLWNoYXJ0e1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4ubWFpbi1zdGF0cy10YWJsZXtcclxuICAgIG1hcmdpbi1sZWZ0OiA1JTtcclxuICAgIHdpZHRoOiA5MCU7XHJcbiAgICBoZWlnaHQ6IDgwJTtcclxuICAgIG1hcmdpbi1yaWdodDogNSU7XHJcblxyXG4gICAgJi1sZWZ0e1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNkY2RjZGM7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XHJcbiAgICAgICAgd2lkdGg6IDQwJTtcclxuICAgIH1cclxuICAgICYtcmlnaHR7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2M0YzRjNDtcclxuICAgICAgICB3aWR0aDogNDAlO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIH1cclxuICAgICYtc3BhY2Vye1xyXG4gICAgICAgIGhlaWdodDogMnB4O1xyXG4gICAgfVxyXG59XHJcbi5kaXNzbWlzc2FsLXR5cGV7XHJcbiAgICB3aWR0aDogOTAlO1xyXG4gICAgbWFyZ2luLWxlZnQ6NSU7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDUlO1xyXG4gICAgaGVpZ2h0OiA5MCU7XHJcbiAgICBtYXJnaW4tdG9wOiA1JTtcclxuICAgIG1hcmdpbi1ib3R0b206IDUlO1xyXG59XHJcblxyXG4uc3RyaWtlLXJhdGUtb3Zlci15ZWFyc3tcclxuICAgIHdpZHRoOiA5MCU7XHJcbiAgICBtYXJnaW4tbGVmdDogNSU7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDUlO1xyXG4gICAgaGVpZ2h0OiA5MCU7XHJcbiAgICBtYXJnaW4tdG9wOiA1JTtcclxufVxyXG4uZGF0YS1ieS15ZWFye1xyXG4gICAgd2lkdGg6IDUwJTtcclxuICAgIG1hcmdpbi1sZWZ0OiAyJTtcclxuICAgIFxyXG59XHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgIC5kYXRhLWJ5LXllYXJ7XHJcbiAgICAgICAgd2lkdGg6IDkwJTtcclxuICAgICAgICBtYXJnaW4tbGVmdDogNSU7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiA1JTtcclxuICAgICAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgfVxyXG4gIH0iXX0= */\"]\n});","map":{"version":3,"sources":["D:\\Angular projects\\iplversus_website\\src\\app\\components\\bats-vs-team-details\\bats-vs-team-details.component.ts","D:\\Angular projects\\iplversus_website\\src\\app\\components\\bats-vs-team-details\\bats-vs-team-details.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\r\nimport { batVTeam } from 'src/app/player_pop_names';\r\nimport { PlayersService } from 'src/app/services/players.service';\r\n\r\ninterface DataEachYear{\r\n  [year:string]:{\r\n    runs:number;\r\n    balls:number;\r\n    strike_rate:any;\r\n    bat_avg:any;\r\n    matches:string[];\r\n    fours:number;\r\n    sixes:number;\r\n    dissmissals:number;\r\n    h_score:any;\r\n    bat_pos:number[];\r\n    ducks:number;\r\n    thirties:number;\r\n    fifties:number;\r\n    hundreds:number;\r\n    status:string\r\n  }\r\n}\r\n\r\ninterface runs_balls_sr{\r\n  runs:number;\r\n  balls:number;\r\n  strike_rate:number;\r\n}\r\n\r\nexport interface IHash {\r\n  [match: string] : runs_balls_sr;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-bats-vs-team-details',\r\n  templateUrl: './bats-vs-team-details.component.html',\r\n  styleUrls: ['./bats-vs-team-details.component.scss']\r\n})\r\n\r\nexport class BatsVsTeamDetailsComponent implements OnInit {\r\n\r\n  public loading:boolean = true;\r\n  public yearTabsStyles!:string[];\r\n  public batsman!:any;\r\n  public team!:any;\r\n  public batVTeamData:batVTeam[]=[];\r\n  nvr_fcd_off: boolean = false;\r\n  data_each_year: DataEachYear={};\r\n  public data_by_match:IHash={};\r\n  inngs_arr:string[]=[];\r\n  runs: number = 0;\r\n  fours: number = 0;\r\n  sixes: number = 0;\r\n  balls: number = 0 ;\r\n  h_score: any = {score:0, status:\"out\", balls:0};\r\n  ducks: number = 0;\r\n  thirties: number = 0;\r\n  fifties: number = 0;\r\n  hundreds: number = 0;\r\n  innings: number = 0;\r\n  bat_pos: number[] = [];\r\n  dissmissals: number = 0;\r\n  bat_avg: any = 0;\r\n  strike_rate: any = 0;\r\n  sr_chart_data: any = [];\r\n  ba_chart_data: any = [];\r\n  lineChartLabels1: string[] = [];\r\n\r\n\r\n  constructor(private route:ActivatedRoute, private _playerService:PlayersService) { }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n\r\n    this.batsman = this.route.snapshot.paramMap.get(\"batsman\")\r\n    this.team = this.route.snapshot.paramMap.get(\"team\")\r\n\r\n    this.batVTeamData = await this._playerService.getBatsmanVsTeamData(this.batsman,this.team);\r\n\r\n    this.loading = false\r\n    if(this.batVTeamData == null){\r\n      this.nvr_fcd_off =true\r\n      return\r\n    }\r\n\r\n    for(var data of this.batVTeamData){\r\n\r\n      if(this.data_each_year[data.year]==undefined){\r\n        this.data_each_year[data.year]=\r\n        {\r\n          runs:0,\r\n          balls:0,\r\n          strike_rate:0,\r\n          bat_avg:\"player was never out\",\r\n          matches:[],\r\n          fours:0,\r\n          sixes:0,\r\n          dissmissals:0,\r\n          h_score:{score:0, status:\"out\", balls:0},\r\n          bat_pos:[],\r\n          ducks:0,\r\n          thirties:0,\r\n          fifties:0,\r\n          hundreds:0,\r\n          status: \"not out\"\r\n        }\r\n\r\n        this.lineChartLabels = this.push_in_sorted_order(this.lineChartLabels, data.year)\r\n        this.lineChartLabels1 = this.push_in_sorted_order(this.lineChartLabels1, data.year)\r\n      }\r\n\r\n      // checking if match id is in data_by_match\r\n      if(this.data_by_match[data.match_id]==undefined){\r\n        this.data_each_year[data.year].matches.push(data.match_id)\r\n        this.inngs_arr.push(data.match_id)\r\n        this.data_by_match[data.match_id]={\r\n          runs:0,\r\n          balls:0,\r\n          strike_rate:0\r\n        }\r\n      }\r\n      //innings\r\n      this.innings++;\r\n      this.data_each_year[data.year].matches.push(data.match_id);\r\n\r\n      //runs\r\n      this.runs += data.runs;\r\n      this.data_each_year[data.year].runs += data.runs;\r\n      if(data.runs>this.h_score[\"score\"]){\r\n        this.h_score[\"score\"] = data.runs;\r\n        this.h_score[\"status\"] = data.status;\r\n        this.h_score[\"balls\"] = data.balls;\r\n    }\r\n      if(data.runs>this.data_each_year[data.year].h_score[\"score\"]){\r\n        this.data_each_year[data.year].h_score[\"score\"] = data.runs;\r\n        this.data_each_year[data.year].h_score[\"status\"] = data.status;\r\n        this.data_each_year[data.year].h_score[\"balls\"] = data.balls;\r\n      }  \r\n      if(data.runs==0){\r\n        this.ducks++;\r\n        this.data_each_year[data.year].ducks++;\r\n      }\r\n      if(data.runs>100){\r\n        this.hundreds++;\r\n        this.data_each_year[data.year].hundreds++;\r\n      }\r\n      if(data.runs>50 && data.runs<100){\r\n        this.fifties++;\r\n        this.data_each_year[data.year].fifties++;\r\n      }\r\n      if(data.runs>30 && data.runs<50){\r\n        this.thirties++;\r\n        this.data_each_year[data.year].thirties++;\r\n      }\r\n\r\n      //fours\r\n      this.fours += data.fours;\r\n      this.data_each_year[data.year].fours += data.fours;\r\n\r\n      //sixes\r\n      this.sixes += data.sixes;\r\n      this.data_each_year[data.year].sixes += data.sixes;\r\n\r\n      //balls\r\n      this.balls += data.balls;\r\n      this.data_each_year[data.year].balls += data.balls;\r\n\r\n      //batpositions\r\n      !this.bat_pos.includes(data.position)? this.bat_pos.push(data.position): null;\r\n      !this.data_each_year[data.year].bat_pos.includes(data.position)? this.data_each_year[data.year].bat_pos.push(data.position): null;\r\n\r\n      //strikerate\r\n      this.data_each_year[data.year].strike_rate = ((this.data_each_year[data.year].runs/this.data_each_year[data.year].balls)*100).toFixed(2);\r\n      \r\n      //dismissals\r\n      if(data.status == \"out\"){\r\n        this.data_each_year[data.year].status = \"out\";\r\n        this.dissmissals++;\r\n        this.data_each_year[data.year].dissmissals++;\r\n      }\r\n\r\n      //batting average\r\n      if(this.data_each_year[data.year].dissmissals!=0){\r\n        this.data_each_year[data.year].bat_avg = (this.data_each_year[data.year].runs/this.data_each_year[data.year].dissmissals).toFixed(2);\r\n      }\r\n\r\n    }\r\n\r\n    if(this.dissmissals != 0)\r\n      this.bat_avg = (this.runs/this.dissmissals).toFixed(2);\r\n    else{\r\n      this.bat_avg = \"he was never out\";\r\n    }\r\n\r\n    this.strike_rate = ((this.runs/this.balls)*100).toFixed(2);\r\n\r\n\r\n    this.bat_avg_problem(this.lineChartLabels1, 0);\r\n    for(var i of this.lineChartLabels)\r\n      this.sr_chart_data.push(this.data_each_year[i].strike_rate);\r\n    \r\n\r\n    for(var i of this.lineChartLabels1)\r\n      this.ba_chart_data.push(this.data_each_year[i].bat_avg);\r\n    //console.log(this.lineChartLabels1);\r\n\r\n    this.yearTabsStyles=Array(this.lineChartLabels.length).fill(\"nav-link\")\r\n    this.yearTabsStyles[0]=\"nav-link active\"\r\n  }\r\n\r\n  bat_avg_problem(arr: string[], i: number){\r\n\r\n    if(i>=this.lineChartLabels1.length){\r\n      return;\r\n    }\r\n    var year = this.lineChartLabels1[i];\r\n    if(this.data_each_year[year].dissmissals==0){\r\n      this.lineChartLabels1.splice(i, 1);\r\n      this.bat_avg_problem(this.lineChartLabels1, i);\r\n    }\r\n    else\r\n      this.bat_avg_problem(this.lineChartLabels1, i+1);\r\n  }\r\n\r\n  push_in_sorted_order(arr: string[], year: string): string[] {\r\n    \r\n    if(arr.length==0 || year>arr[arr.length-1]){\r\n      arr.push(year)\r\n      return arr\r\n    }\r\n\r\n    for(var i=0;i<=arr.length-1;i++){\r\n      if(arr[i]>year){\r\n        arr.splice(i,0,year);\r\n        return arr;\r\n      }\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  \r\n\r\n  public lineChart1Options: ChartOptions = {\r\n    responsive: true,\r\n    scales: {\r\n      yAxes: [{\r\n          ticks: {\r\n              beginAtZero:true\r\n          }\r\n      }]\r\n    }\r\n  };\r\n\r\n  public lineChartLabels: string[] = [];\r\n  public lineChart1Type: ChartType = 'line';\r\n  public lineChart1Legend = true;\r\n  public lineChart1Plugins = [];\r\n  public lineChart1Data: ChartDataSets[] = [\r\n\r\n    { data: this.ba_chart_data, label: 'Batting Average',backgroundColor:'rgba(167, 250, 112,0.5)',pointBackgroundColor:'rgba(0, 0, 1,1)' }\r\n  ];\r\n\r\n  public chart_or_data1=true\r\n  public chartTabClass1 = \"nav-link active\"\r\n  public dataTabClass1 =\"nav-link\"\r\n\r\n  changeChartOrData1(choice:String){\r\n    if(choice==\"chart\"){\r\n      this.chart_or_data1 = true\r\n      this.chartTabClass1 = \"nav-link active\"\r\n      this.dataTabClass1=\"nav-link\"\r\n    }\r\n    else if(choice==\"data\"){\r\n      this.chart_or_data1=false\r\n      this.dataTabClass1=\"nav-link active\"\r\n      this.chartTabClass1=\"nav-link\"\r\n    }\r\n  }\r\n\r\n  public lineChart2Options: ChartOptions = {\r\n    responsive: true,\r\n    scales: {\r\n      yAxes: [{\r\n          ticks: {\r\n              beginAtZero:true\r\n          }\r\n      }]\r\n    }\r\n  };\r\n\r\n  public lineChart2Type: ChartType = 'line';\r\n  public lineChart2Legend = true;\r\n  public lineChart2Plugins = [];\r\n  public lineChart2Data: ChartDataSets[] = [\r\n    { data: this.sr_chart_data, label: 'Strike Rate' ,backgroundColor:'rgba(89, 180, 201,0.5)',pointBackgroundColor:'rgba(0, 0, 1,1)'}\r\n  ];\r\n\r\n  public chart_or_data2=true\r\n  public chartTabClass2 = \"nav-link active\"\r\n  public dataTabClass2 =\"nav-link\"\r\n\r\n  changeChartOrData2(choice:String){\r\n    if(choice==\"chart\"){\r\n      this.chart_or_data2 = true\r\n      this.chartTabClass2 = \"nav-link active\"\r\n      this.dataTabClass2=\"nav-link\"\r\n    }\r\n    else if(choice==\"data\"){\r\n      this.chart_or_data2=false\r\n      this.dataTabClass2=\"nav-link active\"\r\n      this.chartTabClass2=\"nav-link\"\r\n    }\r\n  }\r\n\r\n  public currentYearIndex=0;\r\n\r\n  switchYear(yearIndex:number){\r\n    this.yearTabsStyles[this.currentYearIndex] = \"nav-link\"\r\n    this.currentYearIndex = yearIndex;\r\n    this.yearTabsStyles[this.currentYearIndex] = \"nav-link active\"\r\n  }\r\n  \r\n}\r\n","<div class=\"main-container\">\r\n    <span>\r\n        <img src=\"assets/batting.png\" alt=\"batsman\" class=\"main-iconimg\">\r\n        <h2>{{batsman}}</h2>\r\n    </span>\r\n    <span class=\"spacer\"></span>\r\n    <span class=\"spacer\"></span>\r\n    <span class=\"spacer\"></span>\r\n    <span><h1>Vs</h1></span>\r\n    <span class=\"spacer\"></span>\r\n    <span class=\"spacer\"></span>\r\n    <span class=\"spacer\"></span>\r\n    <span>\r\n        <img src=\"assets/team.png\" alt=\"team\" class=\"main-iconimg\">\r\n        <h2>{{team}}</h2>\r\n    </span>\r\n</div>\r\n<hr>\r\n\r\n<div class=\"text-center\" *ngIf=\"loading\">\r\n    <div class=\"spinner-border\" role=\"status\"> </div>   \r\n</div>\r\n<div *ngIf=\"nvr_fcd_off==true\" style=\"text-align: center;;\">{{batsman}} has never batted against {{team}}</div>\r\n\r\n<div class=\"row\" *ngIf=\"!nvr_fcd_off && !loading\">\r\n    <div class=\" col-md-4\">\r\n        <h2>All Data</h2>\r\n        <table class=\"main-stats-table\">\r\n            <tr>\r\n              <td class=\"main-stats-table-left\">Innings</td>\r\n      \r\n              <td class=\"main-stats-table-right\">{{innings}}</td>\r\n            </tr>\r\n            <tr class=\"main-stats-table-spacer\"></tr>\r\n  \r\n            <tr>\r\n                <td class=\"main-stats-table-left\">Runs</td>\r\n                \r\n                <td class=\"main-stats-table-right\">{{runs}}</td>\r\n              </tr>\r\n  \r\n            <tr class=\"main-stats-table-spacer\"></tr>\r\n  \r\n              <tr>\r\n                <td class=\"main-stats-table-left\">Balls</td>\r\n              \r\n                <td class=\"main-stats-table-right\">{{balls}}</td>\r\n              </tr>\r\n              <tr class=\"main-stats-table-spacer\"></tr>\r\n  \r\n              <tr>\r\n                <td class=\"main-stats-table-left\">Avg Strike Rate</td>\r\n              \r\n                <td class=\"main-stats-table-right\">{{strike_rate}}</td>\r\n              </tr>\r\n              <tr class=\"main-stats-table-spacer\"></tr>\r\n  \r\n              <tr>\r\n                <td class=\"main-stats-table-left\">Batting Average</td>\r\n                \r\n                <td class=\"main-stats-table-right\">{{bat_avg}}</td>\r\n              </tr>\r\n              <tr class=\"main-stats-table-spacer\"></tr>\r\n              <tr>\r\n                <td class=\"main-stats-table-left\">Dismissals</td>\r\n              \r\n                <td class=\"main-stats-table-right\">{{dissmissals}}</td>\r\n              </tr>\r\n            <tr class=\"main-stats-table-spacer\"></tr>\r\n              <tr>\r\n                <td class=\"main-stats-table-left\">Sixes</td>\r\n              \r\n                <td class=\"main-stats-table-right\">{{sixes}}</td>\r\n              </tr>\r\n            <tr class=\"main-stats-table-spacer\"></tr>\r\n  \r\n              <tr>\r\n                <td class=\"main-stats-table-left\">Fours</td>\r\n              \r\n                <td class=\"main-stats-table-right\">{{fours}}</td>\r\n              </tr>\r\n            <tr class=\"main-stats-table-spacer\"></tr>\r\n            <tr>\r\n                <td class=\"main-stats-table-left\">Batting Positions</td>\r\n              \r\n                <td class=\"main-stats-table-right\">{{bat_pos.join(',')}}</td>\r\n              </tr>\r\n              <tr class=\"main-stats-table-spacer\"></tr>\r\n            <tr>\r\n                <td class=\"main-stats-table-left\">Highest Score</td>\r\n              \r\n                <td class=\"main-stats-table-right\">{{h_score[\"score\"]}}\r\n                  <span >({{h_score[\"balls\"]}})</span>\r\n                  <span *ngIf=\"h_score['status'] != 'out'\">*</span></td>\r\n              </tr>\r\n              <tr class=\"main-stats-table-spacer\"></tr>\r\n              <tr>\r\n                <td class=\"main-stats-table-left\">Ducks</td>\r\n              \r\n                <td class=\"main-stats-table-right\">{{ducks}}</td>\r\n              </tr>\r\n            <tr class=\"main-stats-table-spacer\"></tr>\r\n              <tr>\r\n                <td class=\"main-stats-table-left\">30s</td>\r\n              \r\n                <td class=\"main-stats-table-right\">{{thirties}}</td>\r\n              </tr>\r\n              <tr class=\"main-stats-table-spacer\"></tr>\r\n              <tr>\r\n                <td class=\"main-stats-table-left\">50s</td>\r\n              \r\n                <td class=\"main-stats-table-right\">{{fifties}}</td>\r\n              </tr>\r\n              <tr class=\"main-stats-table-spacer\"></tr>\r\n              <tr>\r\n                <td class=\"main-stats-table-left\">100s</td>\r\n              \r\n                <td class=\"main-stats-table-right\">{{hundreds}}</td>\r\n              </tr>\r\n          </table>\r\n    </div>\r\n    <div class=\" col-md-4\">\r\n        <h2>Batting Average Over the Years</h2>\r\n        <ul class=\"nav nav-pills justify-content-center\">\r\n            <li class=\"nav-item\">\r\n              <a [class]=\"chartTabClass1\" aria-current=\"page\" (click)=\"changeChartOrData1('chart')\">Chart</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a [class]=\"dataTabClass1\" (click)=\"changeChartOrData1('data')\">Data</a>\r\n            </li>\r\n          </ul>\r\n          <div class=\"strike-rate-over-years\">\r\n            <div  class=\"line-chart\" *ngIf=\"chart_or_data1\">\r\n              <canvas baseChart \r\n                [datasets]=\"lineChart1Data\"\r\n                [labels]=\"lineChartLabels1\"\r\n                [options]=\"lineChart1Options\"\r\n                [plugins]=\"lineChart1Plugins\"\r\n                [legend]=\"lineChart1Legend\"\r\n                [chartType]=\"lineChart1Type\"\r\n              >\r\n              </canvas>\r\n              </div>\r\n      \r\n            <div *ngIf=\"!chart_or_data1\">\r\n              <table class=\"main-stats-table\">\r\n                <div *ngFor=\"let year of lineChartLabels;index as i\" style=\"display: contents;\">\r\n                <tr >\r\n                  <td class=\"main-stats-table-left\">{{year}}</td>\r\n                  <td class=\"main-stats-table-right\">{{data_each_year[year].bat_avg}}</td>\r\n                </tr>\r\n                <tr class=\"main-stats-table-spacer\"></tr>\r\n              </div>\r\n              </table>\r\n            </div>\r\n          </div>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <h2>Strike Rate Over the Years</h2>\r\n      <ul class=\"nav nav-pills justify-content-center\">\r\n          <li class=\"nav-item\">\r\n            <a [class]=\"chartTabClass2\" aria-current=\"page\" (click)=\"changeChartOrData2('chart')\">Chart</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a [class]=\"dataTabClass2\" (click)=\"changeChartOrData2('data')\">Data</a>\r\n          </li>\r\n        </ul>\r\n        <div class=\"strike-rate-over-years\">\r\n          <div  class=\"line-chart\" *ngIf=\"chart_or_data2\">\r\n            <canvas baseChart \r\n              [datasets]=\"lineChart2Data\"\r\n              [labels]=\"lineChartLabels\"\r\n              [options]=\"lineChart2Options\"\r\n              [plugins]=\"lineChart2Plugins\"\r\n              [legend]=\"lineChart2Legend\"\r\n              [chartType]=\"lineChart2Type\"\r\n            >\r\n            </canvas>\r\n            </div>\r\n    \r\n          <div *ngIf=\"!chart_or_data2\">\r\n            <table class=\"main-stats-table\">\r\n              <div *ngFor=\"let year of lineChartLabels;index as i\" style=\"display: contents;\">\r\n              <tr >\r\n                <td class=\"main-stats-table-left\">{{year}}</td>\r\n                <td class=\"main-stats-table-right\">{{data_each_year[year].strike_rate}}</td>\r\n              </tr>\r\n              <tr class=\"main-stats-table-spacer\"></tr>\r\n            </div>\r\n            </table>\r\n          </div>\r\n        </div>\r\n  </div>\r\n</div>\r\n\r\n<hr *ngIf=\"!nvr_fcd_off && !loading\">\r\n<div *ngIf=\"!nvr_fcd_off && !loading\">\r\n  <h2>Data By Year</h2>\r\n  <ul class=\"nav nav-pills justify-content-center\">\r\n    <li class=\"nav-item\" *ngFor=\"let year of lineChartLabels;index as i\">\r\n      <a [class]=\"yearTabsStyles[i]\" aria-current=\"page\" (click)=\"switchYear(i)\">{{year}}</a>\r\n    </li>\r\n  </ul>\r\n  <div [ngSwitch]=\"currentYearIndex\">\r\n    <div *ngFor=\"let year of lineChartLabels;index as i\">\r\n    <div *ngIf=\"i==currentYearIndex\" class=\"data-by-year\">\r\n      <br>\r\n      <table class=\"main-stats-table\">\r\n      <tr>\r\n        <td class=\"main-stats-table-left\">Innings</td>\r\n        \r\n        <td class=\"main-stats-table-right\">{{data_each_year[year].matches.length}}</td>\r\n      </tr>\r\n      <tr class=\"main-stats-table-spacer\"></tr>\r\n\r\n      <tr>\r\n        <td class=\"main-stats-table-left\">Runs</td> \r\n        \r\n        <td class=\"main-stats-table-right\">{{data_each_year[year].runs}}</td>\r\n      </tr>\r\n      <tr class=\"main-stats-table-spacer\"></tr>\r\n      \r\n      <tr>\r\n        <td class=\"main-stats-table-left\">Balls</td>\r\n        \r\n        <td class=\"main-stats-table-right\">{{data_each_year[year].balls}}</td>\r\n      </tr>\r\n      <tr class=\"main-stats-table-spacer\"></tr>\r\n\r\n      <tr>\r\n        <td class=\"main-stats-table-left\">Dismissals</td>\r\n        \r\n        <td class=\"main-stats-table-right\">{{data_each_year[year].dissmissals}}</td>\r\n      </tr>\r\n      <tr class=\"main-stats-table-spacer\"></tr>\r\n      \r\n      <tr>\r\n        <td class=\"main-stats-table-left\">Strike Rate</td>\r\n        \r\n        <td class=\"main-stats-table-right\">{{data_each_year[year].strike_rate}}</td>\r\n      </tr>\r\n      <tr class=\"main-stats-table-spacer\"></tr>\r\n\r\n      <tr *ngIf=\"true\">\r\n        <td class=\"main-stats-table-left\">Batting Average</td>\r\n        \r\n        <td class=\"main-stats-table-right\">{{data_each_year[year].bat_avg}}</td>\r\n      </tr>\r\n      <tr class=\"main-stats-table-spacer\"></tr>\r\n\r\n      <tr>\r\n        <td class=\"main-stats-table-left\">Fours</td>\r\n        \r\n        <td class=\"main-stats-table-right\">{{data_each_year[year].fours}}</td>\r\n      </tr>\r\n      <tr class=\"main-stats-table-spacer\"></tr>\r\n\r\n      <tr>\r\n        <td class=\"main-stats-table-left\">Sixes</td>\r\n        \r\n        <td class=\"main-stats-table-right\">{{data_each_year[year].sixes}}</td>\r\n      </tr>\r\n      <tr class=\"main-stats-table-spacer\"></tr>\r\n\r\n      <tr>\r\n        <td class=\"main-stats-table-left\">Batting Positions</td>\r\n        <td class=\"main-stats-table-right\">{{data_each_year[year].bat_pos}}</td>\r\n      </tr>\r\n      \r\n      <tr class=\"main-stats-table-spacer\"></tr>\r\n\r\n      <tr>\r\n        <td class=\"main-stats-table-left\">Highest Score</td>\r\n        <td class=\"main-stats-table-right\">{{data_each_year[year].h_score[\"score\"]}}\r\n          <span>{{(data_each_year[year].h_score[\"balls\"])}}</span>\r\n          <span *ngIf=\"data_each_year[year].h_score['status'] != 'out'\">*</span>\r\n        </td>\r\n      </tr>\r\n\r\n      <tr class=\"main-stats-table-spacer\"></tr>\r\n\r\n      <tr>\r\n        <td class=\"main-stats-table-left\">Ducks</td>\r\n        <td class=\"main-stats-table-right\">{{data_each_year[year].ducks}}</td>\r\n      </tr>\r\n\r\n      <tr class=\"main-stats-table-spacer\"></tr>\r\n\r\n      <tr>\r\n        <td class=\"main-stats-table-left\">30s</td>\r\n        <td class=\"main-stats-table-right\">{{data_each_year[year].thirties}}</td>\r\n      </tr>\r\n      \r\n      <tr class=\"main-stats-table-spacer\"></tr>\r\n      \r\n      <tr>\r\n        <td class=\"main-stats-table-left\">50s</td>\r\n        <td class=\"main-stats-table-right\">{{data_each_year[year].fifties}}</td>\r\n      </tr>\r\n\r\n      <tr class=\"main-stats-table-spacer\"></tr>\r\n\r\n      <tr>\r\n        <td class=\"main-stats-table-left\">100s</td>\r\n        <td class=\"main-stats-table-right\">{{data_each_year[year].hundreds}}</td>\r\n      </tr>\r\n    </table>\r\n  </div>\r\n  </div>\r\n  </div>\r\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}